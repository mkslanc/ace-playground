{"version":3,"file":"bundle.5527.js","mappings":";;;;;;AAAa;;AAEb,UAAU,mBAAO,CAAC,IAAe;AACjC,YAAY,2CAA4B;AACxC,mBAAmB,qCAA+B;;AAElD,eAAe,SAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,UAAU;AAC7C,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;AC9JY;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,eAAe,iCAAsB;AACrC,gBAAgB,sCAAiC;AACjD,4BAA4B,0DAA0D;AACtF;AACA,eAAe,8CAAoC;;AAEnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA,CAAC;;AAED,YAAY;;;;;;;;ACtBC;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,yBAAyB,wDAAoD;;AAE7E;AACA;AACA;;AAEA,oBAAoB;AACpB,WAAW;AACX;AACA;AACA,gBAAgB;AAChB;AACA,6BAA6B;AAC7B,gBAAgB,wCAAwC,GAAG;AAC3D,WAAW;AACX;AACA;AACA;AACA,8BAA8B;AAC9B,WAAW;AACX;AACA;AACA;AACA,qEAAqE;AACrE,WAAW;AACX;AACA;AACA;AACA,kEAAkE;AAClE,WAAW;AACX;AACA,uGAAuG;AACvG,WAAW;AACX;AACA;AACA;AACA;AACA,0FAA0F;AAC1F,WAAW;AACX;AACA;AACA;AACA;AACA,6KAA6K;AAC7K,WAAW;AACX;AACA;AACA;AACA;AACA,yLAAyL;AACzL,WAAW;AACX,mCAAmC;AACnC,WAAW;AACX,uBAAuB,KAAK;AAC5B,WAAW,0DAA0D;AACrE,WAAW;AACX,+CAA+C;AAC/C,WAAW;AACX,4CAA4C;AAC5C,WAAW;AACX,8CAA8C;AAC9C,WAAW;AACX,2DAA2D;AAC3D,WAAW;AACX,6CAA6C;AAC7C,WAAW;AACX,kCAAkC,mDAAmD;AACrF,WAAW;AACX;AACA,iLAAiL;AACjL,WAAW;AACX,kGAAkG;AAClG,WAAW;AACX,sIAAsI;AACtI,WAAW;AACX,kEAAkE;AAClE,WAAW;AACX,8EAA8E;AAC9E,WAAW;AACX,8BAA8B;AAC9B,WAAW;AACX,mHAAmH;AACnH,WAAW;AACX;AACA,yHAAyH;AACzH,WAAW;AACX,yCAAyC;AACzC,WAAW;AACX,kHAAkH;AAClH,WAAW;AACX;AACA,iFAAiF;AACjF,WAAW;AACX;AACA,uEAAuE;AACvE,WAAW;AACX;AACA,6IAA6I;AAC7I,WAAW;AACX,6DAA6D;AAC7D,WAAW;AACX,4DAA4D;AAC5D,WAAW;AACX,4GAA4G;AAC5G,WAAW;AACX,0CAA0C;AAC1C,WAAW;AACX;AACA,2EAA2E;AAC3E,WAAW;AACX,4EAA4E;AAC5E,WAAW;AACX,kCAAkC;AAClC,WAAW;AACX,8CAA8C;AAC9C,WAAW;AACX;AACA,0FAA0F;AAC1F,WAAW;AACX;AACA,mNAAmN;AACnN,WAAW;AACX,oDAAoD;AACpD,WAAW;AACX;AACA,wEAAwE;AACxE,WAAW;AACX,iFAAiF;AACjF,WAAW;AACX,8DAA8D;AAC9D,WAAW;AACX;AACA,+FAA+F;AAC/F,WAAW;AACX;AACA,6GAA6G;AAC7G,WAAW;AACX;AACA,wEAAwE;AACxE,WAAW;AACX,gDAAgD;AAChD,WAAW;AACX,yCAAyC;AACzC,WAAW;AACX,uFAAuF;AACvF,WAAW;AACX;AACA;AACA,gBAAgB;AAChB,4EAA4E;AAC5E,gBAAgB;AAChB;AACA,6BAA6B;AAC7B,gBAAgB,+CAA+C,GAAG;AAClE,WAAW;AACX;AACA;AACA,gBAAgB;AAChB,4EAA4E;AAC5E,gBAAgB;AAChB;AACA,6BAA6B;AAC7B,gBAAgB,+CAA+C,GAAG;AAClE,WAAW;AACX,8DAA8D;AAC9D,WAAW;AACX,mDAAmD;AACnD,WAAW;AACX,8DAA8D;AAC9D,WAAW;AACX,kDAAkD;AAClD;AACA;AACA;;AAEA;;AAEA,SAA6B","sources":["webpack://ace-playground/./node_modules/ace-code/src/mode/folding/cstyle.js","webpack://ace-playground/./node_modules/ace-code/src/mode/logtalk.js","webpack://ace-playground/./node_modules/ace-code/src/mode/logtalk_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    \n    //prevent naming conflict with any modes that inherit from cstyle and override this (like csharp)\n    this._getFoldWidgetBase = this.getFoldWidget;\n    \n    /**\n     * Gets fold widget with some non-standard extras:\n     *\n     * @example lineCommentRegionStart\n     *      //#region [optional description]\n     *\n     * @example blockCommentRegionStart\n     *      /*#region [optional description] *[/]\n     *\n     * @example tripleStarFoldingSection\n     *      /*** this folds even though 1 line because it has 3 stars ***[/]\n     * \n     * @note the pound symbol for region tags is optional\n     */\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            // No widget for single line block comment unless region or triple star\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    \n    /**\n     * gets comment region block with end region assumed to be start of comment in any cstyle mode or SQL mode (--) which inherits from this.\n     * There may optionally be a pound symbol before the region/endregion statement\n     */\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar Tokenizer = require(\"../tokenizer\").Tokenizer;\nvar LogtalkHighlightRules = require(\"./logtalk_highlight_rules\").LogtalkHighlightRules;\n// TODO: pick appropriate fold mode\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = LogtalkHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"%\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    this.$id = \"ace/mode/logtalk\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar LogtalkHighlightRules = function() {\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    this.$rules = { start: \n       [ { token: 'punctuation.definition.comment.logtalk',\n           regex: '/\\\\*',\n           push: \n            [ { token: 'punctuation.definition.comment.logtalk',\n                regex: '\\\\*/',\n                next: 'pop' },\n              { defaultToken: 'comment.block.logtalk' } ] },\n         { todo: 'fix grouping',\n           token: \n            [ 'comment.line.percentage.logtalk',\n              'punctuation.definition.comment.logtalk' ],\n           regex: '%.*$\\\\n?' },\n         { todo: 'fix grouping',\n           token: \n            [ 'storage.type.opening.logtalk',\n              'punctuation.definition.storage.type.logtalk' ],\n           regex: ':-\\\\s(?:object|protocol|category|module)(?=[(])' },\n         { todo: 'fix grouping',\n           token: \n            [ 'storage.type.closing.logtalk',\n              'punctuation.definition.storage.type.logtalk' ],\n           regex: ':-\\\\send_(?:object|protocol|category)(?=[.])' },\n         { caseInsensitive: false,\n           token: 'storage.type.relations.logtalk',\n           regex: '\\\\b(?:complements|extends|i(?:nstantiates|mp(?:orts|lements))|specializes)(?=[(])' },\n         { caseInsensitive: false,\n           todo: 'fix grouping',\n           token: \n            [ 'storage.modifier.others.logtalk',\n              'punctuation.definition.storage.modifier.logtalk' ],\n           regex: ':-\\\\s(?:e(?:lse|ndif)|built_in|dynamic|synchronized|threaded)(?=[.])' },\n         { caseInsensitive: false,\n           todo: 'fix grouping',\n           token: \n            [ 'storage.modifier.others.logtalk',\n              'punctuation.definition.storage.modifier.logtalk' ],\n           regex: ':-\\\\s(?:c(?:alls|oinductive)|e(?:lif|n(?:coding|sure_loaded)|xport)|i(?:f|n(?:clude|itialization|fo))|reexport|set_(?:logtalk|prolog)_flag|uses)(?=[(])' },\n         { caseInsensitive: false,\n           todo: 'fix grouping',\n           token: \n            [ 'storage.modifier.others.logtalk',\n              'punctuation.definition.storage.modifier.logtalk' ],\n           regex: ':-\\\\s(?:alias|info|d(?:ynamic|iscontiguous)|m(?:eta_(?:non_terminal|predicate)|ode|ultifile)|p(?:ublic|r(?:otected|ivate))|op|use(?:s|_module)|synchronized)(?=[(])' },\n         { token: 'keyword.operator.message-sending.logtalk',\n           regex: '(:|::|\\\\^\\\\^)' },\n         { token: 'keyword.operator.external-call.logtalk',\n           regex: '([{}])' },\n         { token: 'keyword.operator.mode.logtalk', regex: '(\\\\?|@)' },\n         { token: 'keyword.operator.comparison.term.logtalk',\n           regex: '(@=<|@<|@>|@>=|==|\\\\\\\\==)' },\n         { token: 'keyword.operator.comparison.arithmetic.logtalk',\n           regex: '(=<|<|>|>=|=:=|=\\\\\\\\=)' },\n         { token: 'keyword.operator.bitwise.logtalk',\n           regex: '(<<|>>|/\\\\\\\\|\\\\\\\\/|\\\\\\\\)' },\n         { token: 'keyword.operator.evaluable.logtalk',\n           regex: '\\\\b(?:e|pi|div|mod|rem)\\\\b(?![-!(^~])' },\n         { token: 'keyword.operator.evaluable.logtalk',\n           regex: '(\\\\*\\\\*|\\\\+|-|\\\\*|/|//)' },\n         { token: 'keyword.operator.misc.logtalk',\n           regex: '(:-|!|\\\\\\\\+|,|;|-->|->|=|\\\\=|\\\\.|=\\\\.\\\\.|\\\\^|\\\\bas\\\\b|\\\\bis\\\\b)' },\n         { caseInsensitive: false,\n           token: 'support.function.evaluable.logtalk',\n           regex: '\\\\b(a(bs|cos|sin|tan|tan2)|c(eiling|os)|div|exp|flo(at(_(integer|fractional)_part)?|or)|log|m(ax|in|od)|r(em|ound)|s(i(n|gn)|qrt)|t(an|runcate)|xor)(?=[(])' },\n         { token: 'support.function.control.logtalk',\n           regex: '\\\\b(?:true|fa(?:il|lse)|repeat|(?:instantiation|system)_error)\\\\b(?![-!(^~])' },\n         { token: 'support.function.control.logtalk',\n           regex: '\\\\b((?:uninstantiation|type|domain|existence|permission|representation|evaluation|resource|syntax)_error)(?=[(])' },\n         { token: 'support.function.control.logtalk',\n           regex: '\\\\b(?:ca(?:ll|tch)|ignore|throw|once)(?=[(])' },\n         { token: 'support.function.chars-and-bytes-io.logtalk',\n           regex: '\\\\b(?:(?:get|p(?:eek|ut))_(c(?:har|ode)|byte)|nl)(?=[(])' },\n         { token: 'support.function.chars-and-bytes-io.logtalk',\n           regex: '\\\\bnl\\\\b' },\n         { token: 'support.function.atom-term-processing.logtalk',\n           regex: '\\\\b(?:atom_(?:length|c(?:hars|o(?:ncat|des)))|sub_atom|char_code|number_c(?:har|ode)s)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.term-testing.logtalk',\n           regex: '\\\\b(?:var|atom(ic)?|integer|float|c(?:allable|ompound)|n(?:onvar|umber)|ground|acyclic_term)(?=[(])' },\n         { token: 'support.function.term-comparison.logtalk',\n           regex: '\\\\b(compare)(?=[(])' },\n         { token: 'support.function.term-io.logtalk',\n           regex: '\\\\b(?:read(_term)?|write(?:q|_(?:canonical|term))?|(current_)?(?:char_conversion|op))(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.term-creation-and-decomposition.logtalk',\n           regex: '\\\\b(arg|copy_term|functor|numbervars|term_variables)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.term-unification.logtalk',\n           regex: '\\\\b(subsumes_term|unify_with_occurs_check)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.stream-selection-and-control.logtalk',\n           regex: '\\\\b(?:(?:se|curren)t_(?:in|out)put|open|close|flush_output|stream_property|at_end_of_stream|set_stream_position)(?=[(])' },\n         { token: 'support.function.stream-selection-and-control.logtalk',\n           regex: '\\\\b(?:flush_output|at_end_of_stream)\\\\b' },\n         { token: 'support.function.prolog-flags.logtalk',\n           regex: '\\\\b((?:se|curren)t_prolog_flag)(?=[(])' },\n         { token: 'support.function.compiling-and-loading.logtalk',\n           regex: '\\\\b(logtalk_(?:compile|l(?:ibrary_path|oad|oad_context)|make(_target_action)?))(?=[(])' },\n         { token: 'support.function.compiling-and-loading.logtalk',\n           regex: '\\\\b(logtalk_make)\\\\b' },\n         { caseInsensitive: false,\n           token: 'support.function.event-handling.logtalk',\n           regex: '\\\\b(?:(?:abolish|define)_events|current_event)(?=[(])' },\n         { token: 'support.function.implementation-defined-hooks.logtalk',\n           regex: '\\\\b(?:(?:create|current|set)_logtalk_flag|halt)(?=[(])' },\n         { token: 'support.function.implementation-defined-hooks.logtalk',\n           regex: '\\\\b(halt)\\\\b' },\n         { token: 'support.function.sorting.logtalk',\n           regex: '\\\\b((key)?(sort))(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.entity-creation-and-abolishing.logtalk',\n           regex: '\\\\b((c(?:reate|urrent)|abolish)_(?:object|protocol|category))(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.reflection.logtalk',\n           regex: '\\\\b((object|protocol|category)_property|co(mplements_object|nforms_to_protocol)|extends_(object|protocol|category)|imp(orts_category|lements_protocol)|(instantiat|specializ)es_class)(?=[(])' },\n         { token: 'support.function.logtalk',\n           regex: '\\\\b((?:for|retract)all)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.execution-context.logtalk',\n           regex: '\\\\b(?:context|parameter|se(?:lf|nder)|this)(?=[(])' },\n         { token: 'support.function.database.logtalk',\n           regex: '\\\\b(?:a(?:bolish|ssert(?:a|z))|clause|retract(all)?)(?=[(])' },\n         { token: 'support.function.all-solutions.logtalk',\n           regex: '\\\\b((?:bag|set)of|f(?:ind|or)all)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.multi-threading.logtalk',\n           regex: '\\\\b(threaded(_(ca(?:ll|ncel)|once|ignore|exit|peek|wait|notify))?)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.engines.logtalk',\n           regex: '\\\\b(threaded_engine(_(create|destroy|self|next(?:_reified)?|yield|post|fetch))?)(?=[(])' },\n         { caseInsensitive: false,\n           token: 'support.function.reflection.logtalk',\n           regex: '\\\\b(?:current_predicate|predicate_property)(?=[(])' },\n         { token: 'support.function.event-handler.logtalk',\n           regex: '\\\\b(?:before|after)(?=[(])' },\n         { token: 'support.function.message-forwarding-handler.logtalk',\n           regex: '\\\\b(forward)(?=[(])' },\n         { token: 'support.function.grammar-rule.logtalk',\n           regex: '\\\\b(?:expand_(?:goal|term)|(?:goal|term)_expansion|phrase)(?=[(])' },\n         { token: 'punctuation.definition.string.begin.logtalk',\n           regex: '\\'',\n           push: \n            [ { token: 'constant.character.escape.logtalk',\n                regex: '\\\\\\\\([\\\\\\\\abfnrtv\"\\']|(x[a-fA-F0-9]+|[0-7]+)\\\\\\\\)' },\n              { token: 'punctuation.definition.string.end.logtalk',\n                regex: '\\'',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.single.logtalk' } ] },\n         { token: 'punctuation.definition.string.begin.logtalk',\n           regex: '\"',\n           push: \n            [ { token: 'constant.character.escape.logtalk',\n                regex: '\\\\\\\\([\\\\\\\\abfnrtv\"\\']|(x[a-fA-F0-9]+|[0-7]+)\\\\\\\\)' },\n              { token: 'punctuation.definition.string.end.logtalk',\n                regex: '\"',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.double.logtalk' } ] },\n         { token: 'constant.numeric.logtalk',\n           regex: '\\\\b(0b[0-1]+|0o[0-7]+|0x[0-9a-fA-F]+)\\\\b' },\n         { token: 'constant.numeric.logtalk',\n           regex: '\\\\b(0\\'\\\\\\\\.|0\\'.|0\\'\\'|0\\'\")' },\n         { token: 'constant.numeric.logtalk',\n           regex: '\\\\b(\\\\d+\\\\.?\\\\d*((e|E)(\\\\+|-)?\\\\d+)?)\\\\b' },\n         { token: 'variable.other.logtalk',\n           regex: '\\\\b([A-Z_][A-Za-z0-9_]*)\\\\b' } ] };\n    \n    this.normalizeRules();\n};\n\noop.inherits(LogtalkHighlightRules, TextHighlightRules);\n\nexports.LogtalkHighlightRules = LogtalkHighlightRules;\n"],"names":[],"sourceRoot":""}