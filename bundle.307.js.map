{"version":3,"file":"bundle.307.js","mappings":";;;;;;AAAa;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,eAAe,iCAAsB;AACrC,qBAAqB,wDAAoD;AACzE,2BAA2B,iDAAwD;AACnF,qBAAqB,8CAAoC;AACzD,mBAAmB,yCAA+C;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;;AAGA;AACA,CAAC;;AAED,YAAY;;;;;;;;;AC9DC;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,yBAAyB,wDAAoD;;AAE7E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA,6BAA6B;AAC7B,aAAa;AACb;AACA,+BAA+B;AAC/B,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE,cAAc,EAAE;AAC7D,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAA0B;;;;;;;;AC9E1B,UAAU,mBAAO,CAAC,IAAY;AAC9B,eAAe,iCAAsB;AACrC,eAAe,iCAAsB;AACrC,qBAAqB,iCAA4B;AACjD,eAAe,iCAAsB;AACrC,cAAc,iCAAqB;AACnC,2BAA2B,0DAAwD;AACnF,2BAA2B,iDAAwD;;AAEnF;AACA;AACA;;AAEA,eAAe,8CAAoC;;AAEnD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,yBAAyB;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC;;AAED,YAAY;;;;;;;;;ACvEC;;AAEb,UAAU,mBAAO,CAAC,IAAY;;AAE9B,yBAAyB,wDAAoD;AAC7E,wBAAwB,8CAAkD;AAC1E,yBAAyB,+CAAoD;AAC7E,yBAAyB,wDAAoD;AAC7E,gCAAgC,qDAAgE;;AAEhG;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4DAA4D;AAC5D,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,wBAAwB;AACxB;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA,OAAO;AACP;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA,OAAO;AACP;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA,OAAO;AACP;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA,OAAO;AACP;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,OAAO;AACP;AACA;AACA,kBAAkB;AAClB;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,sBAAsB;AACtB,OAAO;AACP;AACA;AACA,qBAAqB;AACrB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA,SAA4B","sources":["webpack://ace-playground/./node_modules/ace-code/src/mode/json.js","webpack://ace-playground/./node_modules/ace-code/src/mode/json_highlight_rules.js","webpack://ace-playground/./node_modules/ace-code/src/mode/liquid.js","webpack://ace-playground/./node_modules/ace-code/src/mode/liquid_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n\nvar Mode = function() {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/json_worker\", \"JsonWorker\");\n        worker.attachToDocument(session.getDocument());\n\n        worker.on(\"annotate\", function(e) {\n            session.setAnnotations(e.data);\n        });\n\n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n\n        return worker;\n    };\n\n\n    this.$id = \"ace/mode/json\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JsonHighlightRules = function() {\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"variable\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n            }, {\n                token : \"string\", // single line\n                regex : '\"',\n                next  : \"string\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : \"text\", // single quoted strings are not allowed\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"comment\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\/.*$\"\n            }, {\n                token : \"comment.start\", // comments are not allowed, but who cares?\n                regex : \"\\\\/\\\\*\",\n                next  : \"comment\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[,]/\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"string\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"start\"\n            }, {\n                defaultToken : \"string\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment.end\", // comments are not allowed, but who cares?\n                regex : \"\\\\*\\\\/\",\n                next  : \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ]\n    };\n    \n};\n\noop.inherits(JsonHighlightRules, TextHighlightRules);\n\nexports.JsonHighlightRules = JsonHighlightRules;\n","var oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HtmlMode = require(\"./html\").Mode;\nvar JavascriptMode = require(\"./javascript\").Mode;\nvar JsonMode = require(\"./json\").Mode;\nvar CssMode = require(\"./css\").Mode;\nvar LiquidHighlightRules = require(\"./liquid_highlight_rules\").LiquidHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n/* -------------------------------------------- */\n/* FOLDS                                        */\n/* -------------------------------------------- */\n\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\n\n/* -------------------------------------------- */\n/* MODE                                         */\n/* -------------------------------------------- */\n\nvar Mode = function () {\n\n  JsonMode.call(this);\n  HtmlMode.call(this);\n  CssMode.call(this);\n  JavascriptMode.call(this);\n  this.HighlightRules = LiquidHighlightRules;\n  this.foldingRules = new FoldMode();\n\n};\n\noop.inherits(Mode, TextMode);\n\n(function () {\n\n    this.blockComment = {start: \"<!--\", end: \"-->\"};\n    this.voidElements = new HtmlMode().voidElements;\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/liquid\";\n    this.snippetFileId = \"ace/snippets/liquid\";\n\n}.call(Mode.prototype));\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\n\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar CssHighlightRules = require(\"./css_highlight_rules\").CssHighlightRules;\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\nvar JsonHighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\nvar JavaScriptHighlightRules =  require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n\nvar LiquidHighlightRules = function () {\n\n  HtmlHighlightRules.call(this);\n\n  /**\n   * Embedded Matches\n   *\n   * Handles `onMatch` tokens and correct parses the\n   * inner contents of the tag.\n   */\n  function onMatchEmbedded(name) {\n\n    const length = name.length;\n\n    return function (value) {\n\n      const idx = value.indexOf(name);\n\n      const x = [\n        {\n          type: \"meta.tag.punctuation.tag-open\",\n          value: \"{%\"\n        },\n        {\n          type: \"text\",\n          value: value.slice(2, idx)\n        },\n        {\n          type: \"keyword.tag\" + name + \".tag-name\",\n          value: value.slice(idx, idx + length)\n        },\n        {\n          type: \"text\",\n          value: value.slice(idx + length, value.indexOf(\"%}\"))\n        },\n        {\n          type: \"meta.tag.punctuation.tag-close\",\n          value: \"%}\"\n        }\n      ];\n\n      return x;\n    };\n  }\n\n\n  for (var rule in this.$rules) {\n\n    this.$rules[rule].unshift(\n      {\n        token: \"comment.block\",\n        regex: /{%-?\\s*comment\\s*-?%}/,\n        next: [\n          {\n            token: \"comment.block\",\n            regex: /{%-?\\s*endcomment\\s*-?%}/,\n            next: \"pop\"\n          },\n          {\n            defaultToken: \"comment\",\n            caseInsensitive: false\n          }\n        ]\n      },\n      {\n        token: \"comment.line\",\n        regex: /{%-?\\s*#/,\n        next: [\n          {\n            token: \"comment.line\",\n            regex: /-?%}/,\n            next: \"pop\"\n          },\n          {\n            defaultToken: \"comment\",\n            caseInsensitive: false\n          }\n        ]\n      },\n      {\n        token: 'style.embedded.start',\n        regex: /({%-?\\s*\\bstyle\\b\\s*-?%})/,\n        next: \"style-start\",\n        onMatch: onMatchEmbedded(\"style\")\n      },\n      {\n        regex: /({%-?\\s*\\bstylesheet\\b\\s*-?%})/,\n        next: \"stylesheet-start\",\n        onMatch: onMatchEmbedded(\"stylesheet\")\n      },\n      {\n        regex: /({%-?\\s*\\bschema\\b\\s*-?%})/,\n        next: \"schema-start\",\n        onMatch: onMatchEmbedded(\"schema\")\n      },\n      {\n        regex: /({%-?\\s*\\bjavascript\\b\\s*-?%})/,\n        next: \"javascript-start\",\n        onMatch: onMatchEmbedded(\"javascript\")\n      },\n      {\n        token: \"meta.tag.punctuation.tag-open\",\n        regex: /({%)/,\n        next: [\n          {\n              token: \"keyword.block\",\n              regex: /-?\\s*[a-zA-Z_$][a-zA-Z0-9_$]+\\b/,\n              next: 'liquid-start'\n          },\n          {\n            token: \"meta.tag.punctuation.tag-close\",\n            regex: /(-?)(%})/,\n            next: \"pop\"\n          }\n        ]\n      },\n      {\n        token: \"meta.tag.punctuation.ouput-open\",\n        regex: /({{)/,\n        push: \"liquid-start\"\n      }\n    );\n  }\n\n  /* -------------------------------------------- */\n  /* EMBEDDED REGIONS                             */\n  /* -------------------------------------------- */\n\n  this.embedRules(JsonHighlightRules, \"schema-\", [\n    {\n      token: \"schema-start\",\n      next: \"pop\",\n      regex: /({%-?\\s*\\bendschema\\b\\s*-?%})/,\n      onMatch: onMatchEmbedded(\"endschema\")\n    }\n  ]);\n\n  this.embedRules(JavaScriptHighlightRules, \"javascript-\", [\n    {\n      token: \"javascript-start\",\n      next: \"pop\",\n      regex: /({%-?\\s*\\bendjavascript\\b\\s*-?%})/,\n      onMatch: onMatchEmbedded(\"endjavascript\")\n    }\n  ]);\n\n\n\n  this.embedRules(CssHighlightRules, \"style-\", [\n    {\n      token: \"style-start\",\n      next: \"pop\",\n      regex: /({%-?\\s*\\bendstyle\\b\\s*-?%})/,\n      onMatch: onMatchEmbedded(\"endstyle\")\n    }\n  ]);\n\n  this.embedRules(CssHighlightRules, \"stylesheet-\", [\n    {\n      token: \"stylesheet-start\",\n      next: \"pop\",\n      regex: /({%-?\\s*\\bendstylesheet\\b\\s*-?%})/,\n      onMatch: onMatchEmbedded(\"endstylesheet\")\n    }\n  ]);\n\n  /* -------------------------------------------- */\n  /* LIQUID GRAMMARS                              */\n  /* -------------------------------------------- */\n\n  this.addRules({\n    \"liquid-start\": [\n      {\n        token: \"meta.tag.punctuation.ouput-close\",\n        regex: /}}/,\n        next: \"pop\"\n      },\n      {\n        token: \"meta.tag.punctuation.tag-close\",\n        regex: /%}/,\n        next: \"pop\"\n      },\n      {\n        token: \"string\",\n        regex: /['](?:(?:\\\\.)|(?:[^'\\\\]))*?[']/\n      },\n      {\n        token: \"string\",\n        regex: /[\"](?:(?:\\\\.)|(?:[^'\\\\]))*?[\"]/\n      },\n      {\n        token: \"constant.numeric\",\n        regex: /0[xX][0-9a-fA-F]+\\b/\n      },\n      {\n        token: \"constant.numeric\",\n        regex: /[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/\n      },\n      {\n        token: \"keyword.operator\",\n        regex: /\\*|\\-|\\+|=|!=|\\?\\|\\:/\n      },\n      {\n        token: \"constant.language.boolean\",\n        regex: /(?:true|false|nil|empty)\\b/\n      },\n      {\n        token: \"keyword.operator\",\n        regex: /\\s+(?:and|contains|in|with)\\b\\s+/\n      },\n      {\n        token: [\"keyword.operator\", \"support.function\"],\n        regex: /(\\|\\s*)([a-zA-Z_]+)/\n\n      },\n      {\n        token: \"support.function\",\n        regex: /\\s*([a-zA-Z_]+\\b)(?=:)/\n      },\n      {\n        token: \"keyword.operator\",\n        regex:\n          /(:)\\s*(?=[a-zA-Z_])/\n      },\n      {\n        token: [\n          \"support.class\",\n          \"keyword.operator\",\n          \"support.object\",\n          \"keyword.operator\",\n          \"variable.parameter\"\n        ],\n        regex: /(\\w+)(\\.)(\\w+)(\\.)?(\\w+)?/\n      },\n      {\n        token: \"variable.parameter\",\n        regex: /\\.([a-zA-Z_$][a-zA-Z0-9_$]*\\b)$/\n      },\n      {\n        token: \"support.class\",\n        regex: /(?:additional_checkout_buttons|content_for_additional_checkout_buttons)\\b/\n      },\n      {\n        token: \"paren.lparen\",\n        regex: /[\\[\\({]/\n      },\n      {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      },\n      {\n        token: \"text\",\n        regex: /\\s+/\n      }\n    ]\n  });\n\n  this.normalizeRules();\n\n};\n\noop.inherits(LiquidHighlightRules, TextHighlightRules);\n\nexports.LiquidHighlightRules = LiquidHighlightRules;\n"],"names":[],"sourceRoot":""}