{"version":3,"file":"bundle.7171.js","mappings":";;;;;;AAAA;AACA;AACA;;AAEa;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,yBAAyB,wDAAoD;AAC7E,6BAA6B,4DAA4D;AACzF,yBAAyB,+CAAoD;AAC7E,yBAAyB,+CAAoD;AAC7E,2BAA2B,iDAAwD;AACnF,+BAA+B,qDAAgE;;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,yCAAyC,EAAE;AAC3C,sBAAsB,EAAE;AACxB,oBAAoB,IAAI;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B,KAAK,KAAK;AACrC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS,gBAAgB;AACzjT1B;AACA;;AAEa;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,yBAAyB,wDAAoD;AAC7E,wBAAwB,mBAAO,CAAC,KAAuB;;AAEvD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC,EAAE;AACnC,SAAS;AACT;AACA;AACA,iCAAiC,EAAE;AACnC,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,4BAA4B;;;;;;;;ACjK5B;AACA;;AAEa;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,+BAA+B,qDAAgE;;AAE/F;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,sCAAsC;AACtF;AACA;AACA;AACA;;AAEA;;AAEA,gCAAgC;;;;;;;;AC1CnB;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,OAAO,wBAAwB,EAAE,mBAAO,CAAC,IAAgB;AACzD,aAAa,mBAAO,CAAC,KAAa;AAClC,OAAO,cAAc,EAAE,mBAAO,CAAC,KAAiB;AAChD,OAAO,iBAAiB,EAAE,mBAAO,CAAC,KAAoB;AACtD,eAAe,iCAAsB;AACrC,wBAAwB,uDAAkD;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,YAAY;;;;;;;;ACrCC;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,KAAK,mBAAmB,EAAE,mBAAO,CAAC,KAAuB;AACzD,KAAK,0BAA0B,EAAE,mBAAO,CAAC,KAA8B;AACvE,KAAK,sBAAsB,EAAE,mBAAO,CAAC,KAA0B;AAC/D,KAAK,oBAAoB,EAAE,mBAAO,CAAC,KAAwB;AAC3D,KAAK,0BAA0B,EAAE,mBAAO,CAAC,KAA8B;AACvE,KAAK,sBAAsB,EAAE,mBAAO,CAAC,KAA0B;AAC/D,KAAK,oBAAoB,EAAE,mBAAO,CAAC,KAAwB;AAC3D,KAAK,oBAAoB,EAAE,mBAAO,CAAC,KAAwB;AAC3D,KAAK,oBAAoB,EAAE,mBAAO,CAAC,KAAwB;AAC3D,KAAK,WAAW,EAAE,mBAAO,CAAC,KAAc;AACxC,KAAK,oBAAoB,EAAE,mBAAO,CAAC,KAAwB;AAC3D,KAAK,oBAAoB,EAAE,mBAAO,CAAC,KAAwB;;AAE3D,qBAAqB,iCAA4B;;AAEjD;;AAEA;AACA,gBAAgB,0BAA0B,wBAAwB;AAClE,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,GAAG;AACpB;AACA,SAAS;;AAET;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,EAAE,EAAE;AAC1B;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,sBAAsB,EAAE,EAAE;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAyB","sources":["webpack://ace-playground/./node_modules/ace-code/src/mode/jade_highlight_rules.js","webpack://ace-playground/./node_modules/ace-code/src/mode/stylus_highlight_rules.js","webpack://ace-playground/./node_modules/ace-code/src/mode/typescript_highlight_rules.js","webpack://ace-playground/./node_modules/ace-code/src/mode/vue.js","webpack://ace-playground/./node_modules/ace-code/src/mode/vue_highlight_rules.js"],"sourcesContent":["/*\n  THIS FILE WAS AUTOGENERATED BY mode_highlight_rules.tmpl.js (UUID: C5B73B98-5F2A-42E3-9F0E-028A74A9FE4B)\n*/\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar MarkdownHighlightRules = require(\"./markdown_highlight_rules\").MarkdownHighlightRules;\nvar SassHighlightRules = require(\"./scss_highlight_rules\").ScssHighlightRules;\nvar LessHighlightRules = require(\"./less_highlight_rules\").LessHighlightRules;\nvar CoffeeHighlightRules = require(\"./coffee_highlight_rules\").CoffeeHighlightRules;\nvar JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n\nfunction mixin_embed(tag, prefix) {\n    return { \n        token : \"entity.name.function.jade\",\n        regex : \"^\\\\s*\\\\:\" + tag,\n        next  : prefix + \"start\"\n    };\n}\n\nvar JadeHighlightRules = function() {\n\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n        \"u[0-9a-fA-F]{4}|\" + // unicode\n        \"[0-2][0-7]{0,2}|\" + // oct\n        \"3[0-6][0-7]?|\" + // oct\n        \"37[0-7]?|\" + // oct\n        \"[4-7][0-7]?|\" + //oct\n        \".)\";\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    this.$rules = \n        {\n    \"start\": [\n        {\n            token: \"keyword.control.import.include.jade\",\n            regex: \"\\\\s*\\\\binclude\\\\b\"\n        },\n        {\n            token: \"keyword.other.doctype.jade\",\n            regex: \"^!!!\\\\s*(?:[a-zA-Z0-9-_]+)?\"\n        },\n        {\n            onMatch: function(value, currentState, stack) {\n                stack.unshift(this.next, value.length - 2, currentState);\n                return \"comment\";\n            },\n            regex: /^\\s*\\/\\//,\n            next: \"comment_block\"\n        },\n        mixin_embed(\"markdown\", \"markdown-\"),\n        mixin_embed(\"sass\", \"sass-\"),\n        mixin_embed(\"less\", \"less-\"),\n        mixin_embed(\"coffee\", \"coffee-\"),\n        /*\n        {\n            token: {\n                \"2\": {\n                    \"name\": \"entity.name.function.jade\"\n                }\n            },\n            regex: \"^(\\\\s*)(\\\\:cdata)\",\n            next: \"state_9\"\n        },*/\n        // match stuff like: mixin dialog-title-desc(title, desc)\n        {\n            token: [ \"storage.type.function.jade\",\n                       \"entity.name.function.jade\",\n                       \"punctuation.definition.parameters.begin.jade\",\n                       \"variable.parameter.function.jade\",\n                       \"punctuation.definition.parameters.end.jade\"\n                    ],\n            regex: \"^(\\\\s*mixin)( [\\\\w\\\\-]+)(\\\\s*\\\\()(.*?)(\\\\))\"\n        },\n        // match stuff like: mixin dialog-title-desc\n        {\n            token: [ \"storage.type.function.jade\", \"entity.name.function.jade\"],\n            regex: \"^(\\\\s*mixin)( [\\\\w\\\\-]+)\"\n        },\n        {\n            token: \"source.js.embedded.jade\",\n            regex: \"^\\\\s*(?:-|=|!=)\",\n            next: \"js-start\"\n        },\n        /*{\n            token: \"entity.name.tag.script.jade\",\n            regex: \"^\\\\s*script\",\n            next: \"js_code_tag\"\n        },*/\n        {\n            token: \"string.interpolated.jade\",\n            regex: \"[#!]\\\\{[^\\\\}]+\\\\}\"\n        },\n        // Match any tag, id or class. skip AST filters\n        {\n            token: \"meta.tag.any.jade\",\n            regex: /^\\s*(?!\\w+:)(?:[\\w-]+|(?=\\.|#)])/,\n            next: \"tag_single\"\n        },\n        {\n            token: \"suport.type.attribute.id.jade\",\n            regex: \"#\\\\w+\"\n        },\n        {\n            token: \"suport.type.attribute.class.jade\",\n            regex: \"\\\\.\\\\w+\"\n        },\n        {\n            token: \"punctuation\",\n            regex: \"\\\\s*(?:\\\\()\",\n            next: \"tag_attributes\"\n        }\n    ],\n    \"comment_block\": [\n        {regex: /^\\s*(?:\\/\\/)?/, onMatch: function(value, currentState, stack) {\n            if (value.length <= stack[1]) {\n                if (value.slice(-1) == \"/\") {\n                    stack[1] = value.length - 2;\n                    this.next = \"\";\n                    return \"comment\";\n                }\n                stack.shift();\n                stack.shift();\n                this.next = stack.shift();\n                return \"text\";\n            } else {\n                this.next = \"\";\n                return \"comment\";\n            }\n        }, next: \"start\"},\n        {defaultToken: \"comment\"}\n    ],\n    /*\n    \n    \"state_9\": [\n        {\n            token: \"TODO\",\n            regex: \"^(?!\\\\1\\\\s+)\",\n            next: \"start\"\n        },\n        {\n            token: \"TODO\",\n            regex: \".+\",\n            next: \"state_9\"\n        }\n    ],*/\n    /*\"js_code\": [\n        {\n            token: \"keyword.control.js\",\n            regex: \"\\\\beach\\\\b\"\n        },\n        {\n            token: \"text\",\n            regex: \"$\",\n            next: \"start\"\n        }\n    ],*/\n    /*\"js_code_tag\": [\n        {\n            \"include\": \"source.js\"\n        },\n        {\n            token: \"TODO\",\n            regex: \"^((?=(\\\\1)([\\\\w#\\\\.]|$\\\\n?))|^$\\\\n?)\",\n            next: \"start\"\n        }\n    ],*/\n    \"tag_single\": [\n        {\n            token: \"entity.other.attribute-name.class.jade\",\n            regex: \"\\\\.[\\\\w-]+\"\n        },\n        {\n            token: \"entity.other.attribute-name.id.jade\",\n            regex: \"#[\\\\w-]+\"\n        },\n        {\n            token: [\"text\", \"punctuation\"],\n            regex: \"($)|((?!\\\\.|#|=|-))\",\n            next: \"start\"\n        }\n    ],\n    \"tag_attributes\": [ \n        {\n            token : \"string\",\n            regex : \"'(?=.)\",\n            next  : \"qstring\"\n        }, \n        {\n            token : \"string\",\n            regex : '\"(?=.)',\n            next  : \"qqstring\"\n        },\n        {\n            token: [\"entity.other.attribute-name.jade\", \"punctuation\"],\n            regex: \"([a-zA-Z:\\\\.-]+)(=)?\",\n            next: \"attribute_strings\"\n        },\n        {\n            token: \"punctuation\",\n            regex: \"\\\\)\",\n            next: \"start\"\n        }\n    ],\n    \"attribute_strings\": [\n        {\n            token : \"string\",\n            regex : \"'(?=.)\",\n            next  : \"qstring\"\n        }, \n        {\n            token : \"string\",\n            regex : '\"(?=.)',\n            next  : \"qqstring\"\n        },\n        {\n            token : \"string\",\n            regex : '(?=\\\\S)',\n            next  : \"tag_attributes\"\n        }\n    ],\n    \"qqstring\" : [\n        {\n            token : \"constant.language.escape\",\n            regex : escapedRe\n        }, {\n            token : \"string\",\n            regex : '[^\"\\\\\\\\]+'\n        }, {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qqstring\"\n        }, {\n            token : \"string\",\n            regex : '\"|$',\n            next  : \"tag_attributes\"\n        }\n    ],\n    \"qstring\" : [\n        {\n            token : \"constant.language.escape\",\n            regex : escapedRe\n        }, {\n            token : \"string\",\n            regex : \"[^'\\\\\\\\]+\"\n        }, {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qstring\"\n        }, {\n            token : \"string\",\n            regex : \"'|$\",\n            next  : \"tag_attributes\"\n        }\n    ]\n};\n\n    this.embedRules(JavaScriptHighlightRules, \"js-\", [{\n        token: \"text\",\n        regex: \".$\",\n        next: \"start\"\n    }]);\n/*\n    this.embedRules(MarkdownHighlightRules, \"markdown-\", [{\n       token : \"support.function\",\n       regex : \"^\\\\1\\\\s+\",\n       captures: \"1\",\n       next  : \"start\"\n    }]);\n\n    this.embedRules(SassHighlightRules, \"sass-\", [{\n       token : \"support.function\",\n       regex : \"^(?!\\\\1\\\\s+)\",\n       captures: \"1\",\n       next  : \"start\"\n    }]);\n\n    this.embedRules(LessHighlightRules, \"less-\", [{\n       token : \"support.function\",\n       regex : \"^(?!\\\\1\\\\s+)\",\n       captures: \"1\",\n       next  : \"start\"\n    }]);\n\n    this.embedRules(CoffeeHighlightRules, \"coffee-\", [{\n       token : \"support.function\",\n       regex : \"^(?!\\\\1\\\\s+)\",\n       captures: \"1\",\n       next  : \"start\"\n    }]);\n\n    this.embedRules(JavaScriptHighlightRules, \"js-\", [{\n       token : \"support.function\",\n       regex : \"$\",\n       captures: \"1\",\n       next  : \"start\"\n    }]); */\n};\n\noop.inherits(JadeHighlightRules, TextHighlightRules);\n\nexports.JadeHighlightRules = JadeHighlightRules;\n","/*\n  THIS FILE WAS AUTOGENERATED BY Stylus.tmlanguage (UUID: 60519324-6A3A-4382-9E0B-546993A3869A) */\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar CssHighlightRules = require(\"./css_highlight_rules\");\n\nvar StylusHighlightRules = function() {\n\n    // regexp must not have capturing parentheses. Use (?:) instead.\n    // regexps are ordered -> the first match is used\n\n    var keywordMapper = this.createKeywordMapper({\n        \"support.type\": CssHighlightRules.supportType,\n        \"support.function\": CssHighlightRules.supportFunction,\n        \"support.constant\": CssHighlightRules.supportConstant,\n        \"support.constant.color\": CssHighlightRules.supportConstantColor,\n        \"support.constant.fonts\": CssHighlightRules.supportConstantFonts\n    }, \"text\", true);\n\n    this.$rules = {\n    start: [\n        {\n            token : \"comment\",\n            regex : /\\/\\/.*$/\n        },\n        {\n            token : \"comment\", // multi line comment\n            regex : /\\/\\*/,\n            next : \"comment\"\n        },\n        {\n            token: [\"entity.name.function.stylus\", \"text\"],\n            regex: \"^([-a-zA-Z_][-\\\\w]*)?(\\\\()\"\n        },\n        {\n            token: [\"entity.other.attribute-name.class.stylus\"],\n            regex: \"\\\\.-?[_a-zA-Z]+[_a-zA-Z0-9-]*\"\n        },\n        {\n            token: [\"entity.language.stylus\"],\n            regex: \"^ *&\"\n        },\n        {\n            token: [\"variable.language.stylus\"],\n            regex: \"(arguments)\"\n        },\n        {\n            token: [\"keyword.stylus\"],\n            regex: \"@[-\\\\w]+\"\n        },\n        {\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-element.css\"],\n            regex : CssHighlightRules.pseudoElements\n        }, {\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-class.css\"],\n            regex : CssHighlightRules.pseudoClasses\n        }, \n        {\n            token: [\"entity.name.tag.stylus\"],\n            regex: \"(?:\\\\b)(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(?:h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)(?:\\\\b)\"\n        },\n        {\n            token: \"constant.numeric\",  // hex6 color\n            regex: \"#[a-fA-F0-9]{6}\"\n        }, \n        {\n            token: \"constant.numeric\", // hex3 color\n            regex: \"#[a-fA-F0-9]{3}\"\n        }, \n        {\n            token: [\"punctuation.definition.entity.stylus\", \"entity.other.attribute-name.id.stylus\"],\n            regex: \"(#)([a-zA-Z][a-zA-Z0-9_-]*)\"\n        },\n        {\n            token: \"meta.vendor-prefix.stylus\",\n            regex: \"-webkit-|-moz\\\\-|-ms-|-o-\"\n        },\n        {\n            token: \"keyword.control.stylus\",\n            regex: \"(?:!important|for|in|return|true|false|null|if|else|unless|return)\\\\b\"\n        },\n        {\n            token: \"keyword.operator.stylus\",\n            regex: \"!|~|\\\\+|-|(?:\\\\*)?\\\\*|\\\\/|%|(?:\\\\.)\\\\.\\\\.|<|>|(?:=|:|\\\\?|\\\\+|-|\\\\*|\\\\/|%|<|>)?=|!=\"\n        },\n        {\n            token: \"keyword.operator.stylus\",\n            regex: \"(?:in|is(?:nt)?|not)\\\\b\"\n        },\n        {\n            token : \"string\",\n            regex : \"'(?=.)\",\n            next  : \"qstring\"\n        }, {\n            token : \"string\",\n            regex : '\"(?=.)',\n            next  : \"qqstring\"\n        }, \n        {\n            token : \"constant.numeric\",\n            regex : CssHighlightRules.numRe\n        }, \n        {\n            token : \"keyword\",\n            regex : \"(?:ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)\\\\b\"\n        }, \n        {\n            token : keywordMapper,\n            regex : \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n        }\n    ],\n    \"comment\" : [\n        {\n            token : \"comment\", // closing comment\n            regex : \"\\\\*\\\\/\",\n            next : \"start\"\n        }, {\n            defaultToken : \"comment\"\n        }\n    ],\n    \"qqstring\" : [\n        {\n            token : \"string\",\n            regex : '[^\"\\\\\\\\]+'\n        }, \n        {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qqstring\"\n        }, \n        {\n            token : \"string\",\n            regex : '\"|$',\n            next  : \"start\"\n        }\n    ],\n    \"qstring\" : [\n        {\n            token : \"string\",\n            regex : \"[^'\\\\\\\\]+\"\n        }, \n        {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qstring\"\n        }, \n        {\n            token : \"string\",\n            regex : \"'|$\",\n            next  : \"start\"\n        }\n    ]\n};\n\n};\n\noop.inherits(StylusHighlightRules, TextHighlightRules);\n\nexports.StylusHighlightRules = StylusHighlightRules;\n","/*\n  THIS FILE WAS AUTOGENERATED BY mode_highlight_rules.tmpl.js (UUID: 21e323af-f665-4161-96e7-5087d262557e) */\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n\nvar TypeScriptHighlightRules = function (options) {\n\n    var tsRules = [\n        // Match stuff like: function name: return type)\n        {\n            token: [\"storage.type\", \"text\", \"entity.name.function.ts\"],\n            regex: \"(function)(\\\\s+)([a-zA-Z0-9\\$_\\u00a1-\\uffff][a-zA-Z0-9\\d\\$_\\u00a1-\\uffff]*)\"\n        },\n        {\n            token: \"keyword\",\n            regex: \"(?:\\\\b(constructor|declare|interface|as|AS|public|private|extends|export|super|readonly|module|namespace|abstract|implements)\\\\b)\"\n        },\n        {\n            token: [\"keyword\", \"storage.type.variable.ts\"],\n            regex: \"(class|type)(\\\\s+[a-zA-Z0-9_?.$][\\\\w?.$]*)\"\n         },\n        {\n            token: \"keyword\",\n            regex: \"\\\\b(?:super|export|import|keyof|infer)\\\\b\"\n        }, \n        {\n            token: [\"storage.type.variable.ts\"],\n            regex: \"(?:\\\\b(this\\\\.|string\\\\b|bool\\\\b|boolean\\\\b|number\\\\b|true\\\\b|false\\\\b|undefined\\\\b|any\\\\b|null\\\\b|(?:unique )?symbol\\\\b|object\\\\b|never\\\\b|enum\\\\b))\"\n        }\n    ];\n\n    var JSRules = new JavaScriptHighlightRules({jsx: (options && options.jsx) == true}).getRules();\n    \n    JSRules.no_regex = tsRules.concat(JSRules.no_regex);\n    this.$rules = JSRules;\n};\n\noop.inherits(TypeScriptHighlightRules, JavaScriptHighlightRules);\n\nexports.TypeScriptHighlightRules = TypeScriptHighlightRules;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nconst {FoldMode: HtmlFoldMode} = require(\"./folding/html\");\nconst lang = require(\"../lib/lang\");\nconst {XmlBehaviour} = require(\"./behaviour/xml\");\nconst {HtmlCompletions} = require(\"./html_completions\");\nvar HTMLMode = require(\"./html\").Mode;\nvar VueHighlightRules = require(\"./vue_highlight_rules\").VueHighlightRules;\n\nvar voidElements = [\n    \"area\", \"base\", \"br\", \"col\", \"embed\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"meta\", \"menuitem\", \"param\", \"source\",\n    \"track\", \"wbr\"\n];\nvar optionalEndTags = [\"li\", \"dt\", \"dd\", \"p\", \"rt\", \"rp\", \"optgroup\", \"option\", \"colgroup\", \"td\", \"th\"];\nvar Mode = function () {\n    this.HighlightRules = VueHighlightRules;\n    this.foldingRules = new HtmlFoldMode(this.voidElements, lang.arrayToMap(optionalEndTags));\n    this.$behaviour = new XmlBehaviour();\n    this.$completer = new HtmlCompletions();\n};\noop.inherits(Mode, HTMLMode);\n\n(function () {\n    this.blockComment = {\n        start: \"<!--\",\n        end: \"-->\"\n    };\n    this.voidElements = lang.arrayToMap(voidElements);\n\n    this.getCompletions = function (state, session, pos, prefix) {\n        return this.$completer.getCompletions(state, session, pos, prefix);\n    };\n\n    this.$id = \"ace/mode/vue\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar {CssHighlightRules} = require(\"./css_highlight_rules\");\nvar {TypeScriptHighlightRules} = require(\"./typescript_highlight_rules\");\nvar {CoffeeHighlightRules} = require(\"./coffee_highlight_rules\");\nvar {HtmlHighlightRules} = require(\"./html_highlight_rules\");\nvar {JavaScriptHighlightRules} = require(\"./javascript_highlight_rules\");\nvar {StylusHighlightRules} = require(\"./stylus_highlight_rules\");\nvar {SassHighlightRules} = require(\"./sass_highlight_rules\");\nvar {ScssHighlightRules} = require(\"./scss_highlight_rules\");\nvar {LessHighlightRules} = require(\"./less_highlight_rules\");\nvar {Tokenizer} = require(\"../tokenizer\");\nvar {SlimHighlightRules} = require(\"./slim_highlight_rules\");\nvar {JadeHighlightRules} = require(\"./jade_highlight_rules\");\n\nvar JavaScriptMode = require(\"./javascript\").Mode;\n\nvar VueHighlightRules = function (options) {\n\n    /**\n     * @param {{new(): Ace.HighlightRules}|Ace.HighlightRulesMap} HighlightRules\n     * @param {string} tag\n     * @param {string} value\n     * @param {string} [attribute]\n     */\n    this.embedLangRules = function (HighlightRules, tag, value, attribute) {\n        var condition = attribute ? \"(?=[^>]*\" + attribute + \"\\\\s*=\\\\s*['\\\"]\" + value + \"['\\\"]))\" : \"(?=\\\\s|>|$))\";\n        this.$rules.start.unshift({\n            token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex: \"(<)(\" + tag + condition,\n            next: [\n                {\n                    token: \"meta.tag.punctuation.tag-close.\" + tag + \".xml\",\n                    regex: \"/?>\",\n                    next: value + \"-start\"\n                }, {include: \"attributes\"}\n            ]\n        });\n\n        this.$rules[tag + \"-end\"] = [\n            {include: \"attributes\"}, {\n                token: \"meta.tag.punctuation.tag-close.xml\",\n                regex: \"/?>\",\n                next: \"start\",\n                onMatch: function (value, currentState, stack) {\n                    stack.splice(0);\n                    return this.token;\n                }\n            }\n        ];\n\n        this.embedRules(HighlightRules, value + \"-\", [\n            {\n                token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n                regex: \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n                next: tag + \"-end\"\n            }, {\n                token: \"string.cdata.xml\",\n                regex: \"<\\\\!\\\\[CDATA\\\\[\"\n            }, {\n                token: \"string.cdata.xml\",\n                regex: \"\\\\]\\\\]>\"\n            }\n        ]);\n    };\n\n    var vueRules = [\n        {\n            include: \"vue-interpolations\"\n        }\n    ];\n\n    var VueRules = new HtmlHighlightRules().getRules();\n    VueRules.start = vueRules.concat(VueRules.start);\n    VueRules[\"vue-interpolations\"] = [\n        {\n            token: \"punctuation\",\n            regex: /\\{\\{\\{?/,\n            next: \"js-interpolation-start\"\n        }\n    ];\n\n    var self = this;\n    VueRules.tag_stuff.unshift({//vue-directives \n        token: \"string\",\n        regex: /(?:\\b(v-)|(:|@))([a-zA-Z\\-.]+)(?:\\:([a-zA-Z\\-]+))?(?:\\.([a-zA-Z\\-]+))*(\\s*)(=)(\\s*)([\"'])/,\n        onMatch: function (value, currentState, stack) {\n            var quote = value[value.length - 1];\n            stack.unshift(quote, currentState);\n\n            var values = new RegExp(this.regex).exec(value);\n            if (!values) return \"text\";\n            var tokens = [];\n            var types = [\n                \"entity.other.attribute-name.xml\", \"punctuation.separator.key-value.xml\",\n                \"entity.other.attribute-name.xml\", \"entity.other.attribute-name.xml\", \"entity.other.attribute-name.xml\",\n                \"text\", \"punctuation.separator.key-value.xml\", \"text\", \"string\"\n            ];\n            for (var i = 0, l = types.length; i < l; i++) {\n                if (values[i + 1]) tokens[tokens.length] = {\n                    type: types[i],\n                    value: values[i + 1]\n                };\n            }\n            return tokens;\n        },\n        next: [\n            {\n                token: \"string\",\n                regex: /$/,\n                next: \"tag_stuff\"\n            }, {\n                token: \"string\",\n                regex: /.*/,\n                onMatch: function (value, currentState, stack, line) {\n                    var quote = stack[0];\n                    var parts = value.split(quote);\n                    let text = parts[0];\n                    this.next = \"\";\n                    if (parts.length > 1) {\n                        stack.shift();\n                        var nextState = stack.shift();\n                        var currentData = new Tokenizer(self.$rules).getLineTokens(\n                            parts.slice(1).join(quote), nextState);\n                        currentData.tokens.unshift({\n                            type: \"string\",\n                            value: quote\n                        });\n                        this.next = Array.isArray(currentData.state) ? currentData.state[currentData.state.length - 1]\n                            : currentData.state;\n                    }\n                    var data = new JavaScriptMode().getTokenizer().getLineTokens(text, \"start\");\n                    var tokens = data.tokens;\n                    if (currentData) {\n                        tokens.push(...currentData.tokens);\n                    }\n                    return tokens;\n                }\n            }\n        ]\n    }, {\n        token: \"string\",\n        regex: '\"',\n        next: [\n            {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"tag_stuff\"\n            }, {\n                include: \"vue-interpolations\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    }, {\n        token: \"string\",\n        regex: \"'\",\n        next: [\n            {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"tag_stuff\"\n            }, {\n                include: \"vue-interpolations\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    });\n    this.$rules = VueRules;\n\n    this.embedRules(JavaScriptHighlightRules, \"js-interpolation-\", [\n        {\n            token: \"punctuation\",\n            regex: /\\}\\}\\}?/,\n            next: \"start\"\n        }\n    ]);\n\n    this.embedLangRules(CssHighlightRules, \"style\", \"css\");\n    this.embedLangRules(StylusHighlightRules, \"style\", \"stylus\", \"lang\");\n    //TODO: postcss is missing: this.embedLangRules(StylusHighlightRules, \"style\", \"lang\", \"postcss\");\n    this.embedLangRules(SassHighlightRules, \"style\", \"sass\", \"lang\");\n    this.embedLangRules(ScssHighlightRules, \"style\", \"scss\", \"lang\");\n    this.embedLangRules(LessHighlightRules, \"style\", \"less\", \"lang\");\n    this.embedLangRules(TypeScriptHighlightRules, \"script\", \"ts\", \"lang\");\n    this.embedLangRules(CoffeeHighlightRules, \"script\", \"coffee\", \"lang\");\n    //TODO: this.embedLangRules(CoffeeHighlightRules, \"script\", \"livescript\", \"lang\");\n    this.embedLangRules(SlimHighlightRules, \"template\", \"slm\", \"lang\");\n    this.embedLangRules(JadeHighlightRules, \"template\", \"jade\", \"lang\");\n    //TODO: this.embedLangRules(Pug, \"template\", \"pug\", \"lang\");\n    this.embedLangRules(StylusHighlightRules, \"template\", \"stylus\", \"lang\");\n    \n    this.normalizeRules();\n};\n\noop.inherits(VueHighlightRules, HtmlHighlightRules);\n\nexports.VueHighlightRules = VueHighlightRules;\n"],"names":[],"sourceRoot":""}