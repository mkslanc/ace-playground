{"version":3,"file":"bundle.3212.js","mappings":";;;;;;AAAa;;AAEb,cAAc,mBAAO,CAAC,IAAY;AAClC,wCAAwC,mEAA4E;AACpH,kBAAkB,iCAAqB;AACvC,yBAAyB,iCAA4B;AACrD,kBAAkB,iCAAqB;AACvC,mBAAmB,iCAAsB;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL,IAAI,YAAY;;;;;;;;AC1BH;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,wBAAwB,uDAAkD;;AAE1E;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,0BAA0B,GAAG;AAC7B;AACA;AACA,oCAAoC,GAAG;AACvC;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,gCAAgC,GAAG;AACnC;AACA;AACA,+BAA+B,GAAG;AAClC;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,2BAA2B;AAC3B;AACA;AACA,qCAAqC;AACrC;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA,yDAAyD;AACzD,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;AAGA;;AAEA,SAAqC","sources":["webpack://ace-playground/./node_modules/ace-code/src/mode/php_laravel_blade.js","webpack://ace-playground/./node_modules/ace-code/src/mode/php_laravel_blade_highlight_rules.js"],"sourcesContent":["\"use strict\";\n\n    var oop = require(\"../lib/oop\");\n    var PHPLaravelBladeHighlightRules = require(\"./php_laravel_blade_highlight_rules\").PHPLaravelBladeHighlightRules;\n    var PHPMode = require(\"./php\").Mode;\n    var JavaScriptMode = require(\"./javascript\").Mode;\n    var CssMode = require(\"./css\").Mode;\n    var HtmlMode = require(\"./html\").Mode;\n\n    var Mode = function() {\n        PHPMode.call(this);\n\n        this.HighlightRules = PHPLaravelBladeHighlightRules;\n        this.createModeDelegates({\n            \"js-\": JavaScriptMode,\n            \"css-\": CssMode,\n            \"html-\": HtmlMode\n        });\n    };\n    oop.inherits(Mode, PHPMode);\n\n    (function() {\n\n        this.$id = \"ace/mode/php_laravel_blade\";\n    }).call(Mode.prototype);\n\n    exports.Mode = Mode;\n","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar PhpHighlightRules = require(\"./php_highlight_rules\").PhpHighlightRules;\n\nvar PHPLaravelBladeHighlightRules = function() {\n    PhpHighlightRules.call(this);\n\n    var bladeRules = {\n        start: [{\n            include: \"bladeComments\"\n        }, {\n            include: \"directives\"\n        }, {\n            include: \"parenthesis\"\n        }],\n        comments: [{\n            include: \"bladeComments\"\n        }, {\n            token: \"punctuation.definition.comment.blade\",\n            regex: \"(\\\\/\\\\/(.)*)|(\\\\#(.)*)\"\n        }, {\n            token: \"punctuation.definition.comment.begin.php\",\n            regex: \"(?:\\\\/\\\\*)\",\n            push: [{\n                token: \"punctuation.definition.comment.end.php\",\n                regex: \"(?:\\\\*\\\\/)\",\n                next: \"pop\"\n            }, {\n                defaultToken: \"comment.block.blade\"\n            }]\n        }], \n        bladeComments: [{\n            token: \"punctuation.definition.comment.begin.blade\",\n            regex: \"(?:\\\\{\\\\{\\\\-\\\\-)\",\n            push: [{\n                token: \"punctuation.definition.comment.end.blade\",\n                regex: \"(?:\\\\-\\\\-\\\\}\\\\})\",\n                next: \"pop\"\n            }, {\n                defaultToken: \"comment.block.blade\"\n            }]\n        }],\n        parenthesis: [{\n            token: \"parenthesis.begin.blade\",\n            regex: \"\\\\(\",\n            push: [{\n                token: \"parenthesis.end.blade\",\n                regex: \"\\\\)\",\n                next: \"pop\"\n            }, {\n                include: \"strings\"\n            }, {\n                include: \"variables\"\n            }, {\n                include: \"lang\"\n            }, {\n                include: \"parenthesis\"\n            }, {\n                include: \"comments\"\n            }, {\n                defaultToken: \"source.blade\"\n            }]\n        }],\n        directives: [{\n                token: [\"directive.declaration.blade\", \"keyword.directives.blade\"],\n                regex: \"(@)(endunless|endisset|endempty|endauth|endguest|endcomponent|endslot|endalert|endverbatim|endsection|show|php|endphp|endpush|endprepend|endenv|endforelse|isset|empty|component|slot|alert|json|verbatim|section|auth|guest|hasSection|forelse|includeIf|includeWhen|includeFirst|each|push|stack|prepend|inject|env|elseenv|unless|yield|extends|parent|include|acfrepeater|block|can|cannot|choice|debug|elsecan|elsecannot|embed|hipchat|lang|layout|macro|macrodef|minify|partial|render|servers|set|slack|story|task|unset|wpposts|acfend|after|append|breakpoint|endafter|endcan|endcannot|endembed|endmacro|endmarkdown|endminify|endpartial|endsetup|endstory|endtask|endunless|markdown|overwrite|setup|stop|wpempty|wpend|wpquery)\"\n\n            }, {\n                token: [\"directive.declaration.blade\", \"keyword.control.blade\"],\n                regex: \"(@)(if|else|elseif|endif|foreach|endforeach|switch|case|break|default|endswitch|for|endfor|while|endwhile|continue)\"\n            }, {\n                token: [\"directive.ignore.blade\", \"injections.begin.blade\"],\n                regex: \"(@?)(\\\\{\\\\{)\",\n                push: [{\n                    token: \"injections.end.blade\",\n                    regex: \"\\\\}\\\\}\",\n                    next: \"pop\"\n                }, {\n                    include: \"strings\"\n                }, {\n                    include: \"variables\"\n                }, {\n                    include: \"comments\"\n                }, {\n                    defaultToken: \"source.blade\"\n                }]\n            }, {\n                token: \"injections.unescaped.begin.blade\",\n                regex: \"\\\\{\\\\!\\\\!\",\n                push: [{\n                    token: \"injections.unescaped.end.blade\",\n                    regex: \"\\\\!\\\\!\\\\}\",\n                    next: \"pop\"\n                }, {\n                    include: \"strings\"\n                }, {\n                    include: \"variables\"\n                }, {\n                    defaultToken: \"source.blade\"\n                }]\n            }\n\n        ],\n\n        lang: [{\n            token: \"keyword.operator.blade\",\n            regex: \"(?:!=|!|<=|>=|<|>|===|==|=|\\\\+\\\\+|\\\\;|\\\\,|%|&&|\\\\|\\\\|)|\\\\b(?:and|or|eq|neq|ne|gte|gt|ge|lte|lt|le|not|mod|as)\\\\b\"\n        }, {\n            token: \"constant.language.blade\",\n            regex: \"\\\\b(?:TRUE|FALSE|true|false)\\\\b\"\n        }],\n        strings: [{\n            token: \"punctuation.definition.string.begin.blade\",\n            regex: \"\\\"\",\n            push: [{\n                token: \"punctuation.definition.string.end.blade\",\n                regex: \"\\\"\",\n                next: \"pop\"\n            }, {\n                token: \"string.character.escape.blade\",\n                regex: \"\\\\\\\\.\"\n            }, {\n                defaultToken: \"string.quoted.single.blade\"\n            }]\n        }, {\n            token: \"punctuation.definition.string.begin.blade\",\n            regex: \"'\",\n            push: [{\n                token: \"punctuation.definition.string.end.blade\",\n                regex: \"'\",\n                next: \"pop\"\n            }, {\n                token: \"string.character.escape.blade\",\n                regex: \"\\\\\\\\.\"\n            }, {\n                defaultToken: \"string.quoted.double.blade\"\n            }]\n        }],\n        variables: [{\n            token: \"variable.blade\",\n            regex: \"\\\\$([a-zA-Z_][a-zA-Z0-9_]*)\\\\b\"\n        }, {\n            token: [\"keyword.operator.blade\", \"constant.other.property.blade\"],\n            regex: \"(->)([a-zA-Z_][a-zA-Z0-9_]*)\\\\b\"\n        }, {\n            token: [\"keyword.operator.blade\",\n                \"meta.function-call.object.blade\",\n                \"punctuation.definition.variable.blade\",\n                \"variable.blade\",\n                \"punctuation.definition.variable.blade\"\n            ],\n            regex: \"(->)([a-zA-Z_][a-zA-Z0-9_]*)(\\\\()(.*?)(\\\\))\"\n        }]\n    };\n\n    var bladeStart = bladeRules.start;\n\n    for (var rule in this.$rules) {\n        this.$rules[rule].unshift.apply(this.$rules[rule], bladeStart);\n    }\n\n    Object.keys(bladeRules).forEach(function(x) {\n        if (!this.$rules[x])\n            this.$rules[x] = bladeRules[x];\n    }, this);\n\n    this.normalizeRules();\n};\n\n\noop.inherits(PHPLaravelBladeHighlightRules, PhpHighlightRules);\n\nexports.PHPLaravelBladeHighlightRules = PHPLaravelBladeHighlightRules;\n"],"names":[],"sourceRoot":""}