{"version":3,"file":"bundle.1214.js","mappings":";;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;AACb,UAAU,mBAAO,CAAC,KAAe;AACjC,cAAc,mBAAO,CAAC,KAAqB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,YAAY;AACnD,0BAA0B,OAAO,UAAU,QAAQ,QAAQ;AAC3D,wBAAwB;AACxB,wDAAwD;AACxD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;AC/DY;AACb;AACA,aAAa,4BAA4B;AACzC;;AAEA,mBAAO,CAAC,KAA2B;;AAEnC,UAAU,mBAAO,CAAC,KAAY;AAC9B,UAAU,mBAAO,CAAC,IAAY;AAC9B,aAAa,mBAAO,CAAC,KAAW;AAChC,mBAAmB,yCAA4C;AAC/D;;AAEA,eAAe,mBAAO,CAAC,KAAY;AACnC,gBAAgB,mBAAO,CAAC,KAAa;;AAErC,eAAe;AACf;AACA,gDAAgD,oCAAoC;AACpF,CAAC;;AAED;AACA,aAAa;AACb,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,kBAAkB,+BAA+B;AACjD,kBAAkB,6CAA6C;AAC/D,kBAAkB,iDAAiD;AACnE,kBAAkB,qDAAqD;AACvE,kBAAkB;AAClB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAA2B;AAC5C,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,iCAAiC;AAClD,iBAAiB,kCAAkC;AACnD,iBAAiB,2CAA2C;AAC5D,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,mCAAmC;AACpD,iBAAiB,oCAAoC;AACrD,iBAAiB,sCAAsC;AACvD,iBAAiB,oDAAoD;AACrE,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,kBAAkB,sCAAsC;AACxD,kBAAkB,6CAA6C;AAC/D,kBAAkB;AAClB;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,8BAA8B;AAC/C,iBAAiB,iCAAiC;AAClD,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,uCAAuC;AACxD,iBAAiB,sCAAsC;AACvD,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,qCAAqC;AACjE;AACA,iCAAiC,WAAW;AAC5C,2BAA2B,0CAA0C;AACrE;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,kBAAkB,IAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,aAAa;AACb;AACA;AACA;AACA,+BAA+B,yDAAyD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,UAAU;AACV,iCAAiC;AACjC;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,sBAAsB;AACtB,iBAAiB;AACjB;AACA,UAAU;AACV;AACA;AACA,wCAAwC,gCAAgC;AACxE,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yCAAyC,aAAa;AACtD,iBAAiB;AACjB,mCAAmC;AACnC;AACA,eAAe;AACf,UAAU;AACV;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD,uBAAuB,yBAAyB;AAChD;AACA;;AAEA;AACA,eAAe,0BAA0B;AACzC,eAAe,2BAA2B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;;;;;;;;AClZnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;AACb,kBAAkB,wCAAgC;AAClD,kBAAkB,wCAAgD;;AAElE;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB,mCAA2B;AAC5C;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,oBAAoB;;AAEpB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://ace-playground/./node_modules/ace-code/src/ext/menu_tools/overlay_page.js","webpack://ace-playground/./node_modules/ace-code/src/ext/menu_tools/settings_menu.css.js","webpack://ace-playground/./node_modules/ace-code/src/ext/options.js","webpack://ace-playground/./node_modules/ace-code/src/ext/settings_menu.js","webpack://ace-playground/./node_modules/ace-code/src/ext/themelist.js"],"sourcesContent":["/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n/*global define, require */\n\n/**\n * Overlay Page\n * @fileOverview Overlay Page <br />\n * Generates an overlay for displaying menus. The overlay is an absolutely\n *  positioned div.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n */\n\n'use strict';\nvar dom = require(\"../../lib/dom\");\nvar cssText = require(\"./settings_menu.css\");\ndom.importCssString(cssText, \"settings_menu.css\", false);\n\n/**\n * Generates an overlay for displaying menus. The overlay is an absolutely\n *  positioned div.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n * @param editor\n * @param {HTMLElement} contentElement Any element which may be presented inside\n *  a div.\n * @param [callback]\n */\nmodule.exports.overlayPage = function overlayPage(editor, contentElement, callback) {\n    var closer = document.createElement('div');\n    var ignoreFocusOut = false;\n\n    function documentEscListener(e) {\n        if (e.keyCode === 27) {\n            close();\n        }\n    }\n\n    function close() {\n        if (!closer) return;\n        document.removeEventListener('keydown', documentEscListener);\n        closer.parentNode.removeChild(closer);\n        if (editor) {\n            editor.focus();\n        }\n        closer = null;\n        callback && callback();\n    }\n\n     /**\n     * Defines whether overlay is closed when user clicks outside of it.\n     * \n     * @param {Boolean} ignore      If set to true overlay stays open when focus moves to another part of the editor.\n     */\n    function setIgnoreFocusOut(ignore) {\n        ignoreFocusOut = ignore;\n        if (ignore) {\n            closer.style.pointerEvents = \"none\";\n            contentElement.style.pointerEvents = \"auto\";\n        }\n    }\n\n    closer.style.cssText = 'margin: 0; padding: 0; ' +\n        'position: fixed; top:0; bottom:0; left:0; right:0;' +\n        'z-index: 9990; ' +\n        (editor ? 'background-color: rgba(0, 0, 0, 0.3);' : '');\n    closer.addEventListener('click', function(e) {\n        if (!ignoreFocusOut) {\n            close();\n        }\n    });\n    // click closer if esc key is pressed\n    document.addEventListener('keydown', documentEscListener);\n\n    contentElement.addEventListener('click', function (e) {\n        e.stopPropagation();\n    });\n\n    closer.appendChild(contentElement);\n    document.body.appendChild(closer);\n    if (editor) {\n        editor.blur();\n    }\n    return {\n        close: close,\n        setIgnoreFocusOut: setIgnoreFocusOut\n    };\n};\n","module.exports = `#ace_settingsmenu, #kbshortcutmenu {\n    background-color: #F7F7F7;\n    color: black;\n    box-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\n    padding: 1em 0.5em 2em 1em;\n    overflow: auto;\n    position: absolute;\n    margin: 0;\n    bottom: 0;\n    right: 0;\n    top: 0;\n    z-index: 9991;\n    cursor: default;\n}\n\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\n    box-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\n    background-color: rgba(255, 255, 255, 0.6);\n    color: black;\n}\n\n.ace_optionsMenuEntry:hover {\n    background-color: rgba(100, 100, 100, 0.1);\n    transition: all 0.3s\n}\n\n.ace_closeButton {\n    background: rgba(245, 146, 146, 0.5);\n    border: 1px solid #F48A8A;\n    border-radius: 50%;\n    padding: 7px;\n    position: absolute;\n    right: -8px;\n    top: -8px;\n    z-index: 100000;\n}\n.ace_closeButton{\n    background: rgba(245, 146, 146, 0.9);\n}\n.ace_optionsMenuKey {\n    color: darkslateblue;\n    font-weight: bold;\n}\n.ace_optionsMenuCommand {\n    color: darkcyan;\n    font-weight: normal;\n}\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\n    vertical-align: middle;\n}\n\n.ace_optionsMenuEntry button[ace_selected_button=true] {\n    background: #e7e7e7;\n    box-shadow: 1px 0px 2px 0px #adadad inset;\n    border-color: #adadad;\n}\n.ace_optionsMenuEntry button {\n    background: white;\n    border: 1px solid lightgray;\n    margin: 0px;\n}\n.ace_optionsMenuEntry button:hover{\n    background: #f0f0f0;\n}`;\n","\"use strict\";\n/**\n * @typedef {import(\"../editor\").Editor} Editor\n */\n\nrequire(\"./menu_tools/overlay_page\");\n\nvar dom = require(\"../lib/dom\");\nvar oop = require(\"../lib/oop\");\nvar config = require(\"../config\");\nvar EventEmitter = require(\"../lib/event_emitter\").EventEmitter;\nvar buildDom = dom.buildDom;\n\nvar modelist = require(\"./modelist\");\nvar themelist = require(\"./themelist\");\n\nvar themes = { Bright: [], Dark: [] };\nthemelist.themes.forEach(function(x) {\n    themes[x.isDark ? \"Dark\" : \"Bright\"].push({ caption: x.caption, value: x.theme });\n});\n\nvar modes = modelist.modes.map(function(x){ \n    return { caption: x.caption, value: x.mode }; \n});\n\n\nvar optionGroups = {\n    Main: {\n        Mode: {\n            path: \"mode\",\n            type: \"select\",\n            items: modes\n        },\n        Theme: {\n            path: \"theme\",\n            type: \"select\",\n            items: themes\n        },\n        \"Keybinding\": {\n            type: \"buttonBar\",\n            path: \"keyboardHandler\",\n            items: [\n                { caption : \"Ace\", value : null },\n                { caption : \"Vim\", value : \"ace/keyboard/vim\" },\n                { caption : \"Emacs\", value : \"ace/keyboard/emacs\" },\n                { caption : \"Sublime\", value : \"ace/keyboard/sublime\" },\n                { caption : \"VSCode\", value : \"ace/keyboard/vscode\" }\n            ]\n        },\n        \"Font Size\": {\n            path: \"fontSize\",\n            type: \"number\",\n            defaultValue: 12,\n            defaults: [\n                {caption: \"12px\", value: 12},\n                {caption: \"24px\", value: 24}\n            ]\n        },\n        \"Soft Wrap\": {\n            type: \"buttonBar\",\n            path: \"wrap\",\n            items: [\n               { caption : \"Off\",  value : \"off\" },\n               { caption : \"View\", value : \"free\" },\n               { caption : \"margin\", value : \"printMargin\" },\n               { caption : \"40\",   value : \"40\" }\n            ]\n        },\n        \"Cursor Style\": {\n            path: \"cursorStyle\",\n            items: [\n               { caption : \"Ace\",    value : \"ace\" },\n               { caption : \"Slim\",   value : \"slim\" },\n               { caption : \"Smooth\", value : \"smooth\" },\n               { caption : \"Smooth And Slim\", value : \"smooth slim\" },\n               { caption : \"Wide\",   value : \"wide\" }\n            ]\n        },\n        \"Folding\": {\n            path: \"foldStyle\",\n            items: [\n                { caption : \"Manual\", value : \"manual\" },\n                { caption : \"Mark begin\", value : \"markbegin\" },\n                { caption : \"Mark begin and end\", value : \"markbeginend\" }\n            ]\n        },\n        \"Soft Tabs\": [{\n            path: \"useSoftTabs\"\n        }, {\n            ariaLabel: \"Tab Size\",\n            path: \"tabSize\",\n            type: \"number\",\n            values: [2, 3, 4, 8, 16]\n        }],\n        \"Overscroll\": {\n            type: \"buttonBar\",\n            path: \"scrollPastEnd\",\n            items: [\n               { caption : \"None\",  value : 0 },\n               { caption : \"Half\",   value : 0.5 },\n               { caption : \"Full\",   value : 1 }\n            ]\n        }\n    },\n    More: {\n        \"Atomic soft tabs\": {\n            path: \"navigateWithinSoftTabs\"\n        },\n        \"Enable Behaviours\": {\n            path: \"behavioursEnabled\"\n        },\n        \"Wrap with quotes\": {\n            path: \"wrapBehavioursEnabled\"\n        },\n        \"Enable Auto Indent\": {\n            path: \"enableAutoIndent\"\n        },\n        \"Full Line Selection\": {\n            type: \"checkbox\",\n            values: \"text|line\",\n            path: \"selectionStyle\"\n        },\n        \"Highlight Active Line\": {\n            path: \"highlightActiveLine\"\n        },\n        \"Show Invisibles\": {\n            path: \"showInvisibles\"\n        },\n        \"Show Indent Guides\": {\n            path: \"displayIndentGuides\"\n        },\n        \"Highlight Indent Guides\": {\n            path: \"highlightIndentGuides\"\n        },\n        \"Persistent HScrollbar\": {\n            path: \"hScrollBarAlwaysVisible\"\n        },\n        \"Persistent VScrollbar\": {\n            path: \"vScrollBarAlwaysVisible\"\n        },\n        \"Animate scrolling\": {\n            path: \"animatedScroll\"\n        },\n        \"Show Gutter\": {\n            path: \"showGutter\"\n        },\n        \"Show Line Numbers\": {\n            path: \"showLineNumbers\"\n        },\n        \"Relative Line Numbers\": {\n            path: \"relativeLineNumbers\"\n        },\n        \"Fixed Gutter Width\": {\n            path: \"fixedWidthGutter\"\n        },\n        \"Show Print Margin\": [{\n            path: \"showPrintMargin\"\n        }, {\n            ariaLabel: \"Print Margin\",\n            type: \"number\",\n            path: \"printMarginColumn\"\n        }],\n        \"Indented Soft Wrap\": {\n            path: \"indentedSoftWrap\"\n        },\n        \"Highlight selected word\": {\n            path: \"highlightSelectedWord\"\n        },\n        \"Fade Fold Widgets\": {\n            path: \"fadeFoldWidgets\"\n        },\n        \"Use textarea for IME\": {\n            path: \"useTextareaForIME\"\n        },\n        \"Merge Undo Deltas\": {\n            path: \"mergeUndoDeltas\",\n            items: [\n               { caption : \"Always\",  value : \"always\" },\n               { caption : \"Never\",   value : \"false\" },\n               { caption : \"Timed\",   value : \"true\" }\n            ]\n        },\n        \"Elastic Tabstops\": {\n            path: \"useElasticTabstops\"\n        },\n        \"Incremental Search\": {\n            path: \"useIncrementalSearch\"\n        },\n        \"Read-only\": {\n            path: \"readOnly\"\n        },\n        \"Copy without selection\": {\n            path: \"copyWithEmptySelection\"\n        },\n        \"Live Autocompletion\": {\n            path: \"enableLiveAutocompletion\"\n        },\n        \"Custom scrollbar\": {\n            path: \"customScrollbar\"\n        },\n        \"Use SVG gutter icons\": {\n            path: \"useSvgGutterIcons\"\n        },\n        \"Annotations for folded lines\": {\n            path: \"showFoldedAnnotations\"\n        },\n        \"Keyboard Accessibility Mode\": {\n            path: \"enableKeyboardAccessibility\"\n        },\n        \"Gutter tooltip follows mouse\": {\n            path: \"tooltipFollowsMouse\",\n            defaultValue: true\n        }\n    }\n};\n\nclass OptionPanel {\n    /**\n     * \n     * @param {Editor} editor\n     * @param {HTMLElement} [element]\n     */\n    constructor(editor, element) {\n        this.editor = editor;\n        this.container = element || document.createElement(\"div\");\n        this.groups = [];\n        this.options = {};\n    }\n    \n    add(config) {\n        if (config.Main)\n            oop.mixin(optionGroups.Main, config.Main);\n        if (config.More)\n            oop.mixin(optionGroups.More, config.More);\n    }\n\n  \n    render() {\n        this.container.innerHTML = \"\";\n        buildDom([\"table\", {role: \"presentation\", id: \"controls\"}, \n            this.renderOptionGroup(optionGroups.Main),\n            [\"tr\", null, [\"td\", {colspan: 2},\n                [\"table\", {role: \"presentation\", id: \"more-controls\"}, \n                    this.renderOptionGroup(optionGroups.More)\n                ]\n            ]],\n            [\"tr\", null, [\"td\", {colspan: 2}, \"version \" + config.version]]\n        ], this.container);\n    }\n    \n    renderOptionGroup(group) {\n        return Object.keys(group).map(function(key, i) {\n            var item = group[key];\n            if (!item.position)\n                item.position = i / 10000;\n            if (!item.label)\n                item.label = key;\n            return item;\n        }).sort(function(a, b) {\n            return a.position - b.position;\n        }).map(function(item) {\n            return this.renderOption(item.label, item);\n        }, this);\n    }\n\n    /**\n     * @param {string} key\n     * @param {Object} option\n     */\n    renderOptionControl(key, option) {\n        var self = this;\n        if (Array.isArray(option)) {\n            return option.map(function(x) {\n                return self.renderOptionControl(key, x);\n            });\n        }\n        /**@type {any}*/\n        var control;\n        \n        var value = self.getOption(option);\n        \n        if (option.values && option.type != \"checkbox\") {\n            if (typeof option.values == \"string\")\n                option.values = option.values.split(\"|\");\n            option.items = option.values.map(function(v) {\n                return { value: v, name: v };\n            });\n        }\n        \n        if (option.type == \"buttonBar\") {\n            control = [\"div\", {role: \"group\", \"aria-labelledby\": option.path + \"-label\"}, option.items.map(function(item) {\n                return [\"button\", { \n                    value: item.value, \n                    ace_selected_button: value == item.value, \n                    'aria-pressed': value == item.value, \n                    onclick: function() {\n                        self.setOption(option, item.value);\n                        var nodes = this.parentNode.querySelectorAll(\"[ace_selected_button]\");\n                        for (var i = 0; i < nodes.length; i++) {\n                            nodes[i].removeAttribute(\"ace_selected_button\");\n                            nodes[i].setAttribute(\"aria-pressed\", false);\n                        }\n                        this.setAttribute(\"ace_selected_button\", true);\n                        this.setAttribute(\"aria-pressed\", true);\n                    } \n                }, item.desc || item.caption || item.name];\n            })];\n        } else if (option.type == \"number\") {\n            control = [\"input\", {type: \"number\", value: value || option.defaultValue, style:\"width:3em\", oninput: function() {\n                self.setOption(option, parseInt(this.value));\n            }}];\n            if (option.ariaLabel) {\n                control[1][\"aria-label\"] = option.ariaLabel;\n            } else {\n                control[1].id = key;\n            }\n            if (option.defaults) {\n                control = [control, option.defaults.map(function(item) {\n                    return [\"button\", {onclick: function() {\n                        var input = this.parentNode.firstChild;\n                        input.value = item.value;\n                        input.oninput();\n                    }}, item.caption];\n                })];\n            }\n        } else if (option.items) {\n            var buildItems = function(items) {\n                return items.map(function(item) {\n                    return [\"option\", { value: item.value || item.name }, item.desc || item.caption || item.name];\n                });\n            };\n            \n            var items = Array.isArray(option.items) \n                ? buildItems(option.items)\n                : Object.keys(option.items).map(function(key) {\n                    return [\"optgroup\", {\"label\": key}, buildItems(option.items[key])];\n                });\n            control = [\"select\", { id: key, value: value, onchange: function() {\n                self.setOption(option, this.value);\n            } }, items];\n        } else {\n            if (typeof option.values == \"string\")\n                option.values = option.values.split(\"|\");\n            if (option.values) value = value == option.values[1];\n            control = [\"input\", { type: \"checkbox\", id: key, checked: value || null, onchange: function() {\n                var value = this.checked;\n                if (option.values) value = option.values[value ? 1 : 0];\n                self.setOption(option, value);\n            }}];\n            if (option.type == \"checkedNumber\") {\n                control = [control, []];\n            }\n        }\n        return control;\n    }\n\n    /**\n     * \n     * @param key\n     * @param option\n     */\n    renderOption(key, option) {\n        if (option.path && !option.onchange && !this.editor.$options[option.path])\n            return;\n        var path = Array.isArray(option) ? option[0].path : option.path;\n        this.options[path] = option;\n        var safeKey = \"-\" + path;\n        var safeId = path + \"-label\";\n        var control = this.renderOptionControl(safeKey, option);\n        return [\"tr\", {class: \"ace_optionsMenuEntry\"}, [\"td\",\n            [\"label\", {for: safeKey, id: safeId}, key]\n        ], [\"td\", control]];\n    }\n\n    /**\n     * @param {string | number | Object} option\n     * @param {string | number | boolean} value\n     */\n    setOption(option, value) {\n        if (typeof option == \"string\")\n            option = this.options[option];\n        if (value == \"false\") value = false;\n        if (value == \"true\") value = true;\n        if (value == \"null\") value = null;\n        if (value == \"undefined\") value = undefined;\n        if (typeof value == \"string\" && parseFloat(value).toString() == value)\n            value = parseFloat(value);\n        if (option.onchange)\n            option.onchange(value);\n        else if (option.path)\n            this.editor.setOption(option.path, value);\n        this._signal(\"setOption\", {name: option.path, value: value});\n    }\n    \n    getOption(option) {\n        if (option.getValue)\n            return option.getValue();\n        return this.editor.getOption(option.path);\n    }\n}\noop.implement(OptionPanel.prototype, EventEmitter);\n\nexports.OptionPanel = OptionPanel;\n","/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n/*global define, require */\n\n/**\n * Show Settings Menu\n * @fileOverview Show Settings Menu <br />\n * Displays an interactive settings menu mostly generated on the fly based on\n *  the current state of the editor.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n */\n\n\"use strict\";\nvar OptionPanel = require(\"./options\").OptionPanel;\nvar overlayPage = require('./menu_tools/overlay_page').overlayPage;\n\n/**\n * This displays the settings menu if it is not already being shown.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n * @param {import(\"../editor\").Editor} editor An instance of the ace editor.\n */\nfunction showSettingsMenu(editor) {\n    // show if the menu isn't open already.\n    if (!document.getElementById('ace_settingsmenu')) {\n        var options = new OptionPanel(editor);\n        options.render();\n        options.container.id = \"ace_settingsmenu\";\n        overlayPage(editor, options.container);\n        // @ts-ignore\n        options.container.querySelector(\"select,input,button,checkbox\").focus();\n    }\n}\n\n/**\n * Initializes the settings menu extension. It adds the showSettingsMenu\n *  method to the given editor object and adds the showSettingsMenu command\n *  to the editor with appropriate keyboard shortcuts.\n */\nmodule.exports.init = function() {\n    var Editor = require(\"../editor\").Editor;\n    Editor.prototype.showSettingsMenu = function() {\n        showSettingsMenu(this);\n    };\n};\n","/**\n * Generates a list of themes available when ace was built.\n * @fileOverview Generates a list of themes available when ace was built.\n * @author <a href=\"mailto:matthewkastor@gmail.com\">\n *  Matthew Christopher Kastor-Inare III </a><br />\n *  ☭ Hial Atropa!! ☭\n */\n\n\"use strict\";\n\nvar themeData = [\n    [\"Chrome\"         ],\n    [\"Clouds\"         ],\n    [\"Crimson Editor\" ],\n    [\"Dawn\"           ],\n    [\"Dreamweaver\"    ],\n    [\"Eclipse\"        ],\n    [\"GitHub\"         ],\n    [\"IPlastic\"       ],\n    [\"Solarized Light\"],\n    [\"TextMate\"       ],\n    [\"Tomorrow\"       ],\n    [\"XCode\"          ],\n    [\"Kuroir\"],\n    [\"KatzenMilch\"],\n    [\"SQL Server\"           ,\"sqlserver\"               , \"light\"],\n    [\"CloudEditor\"          ,\"cloud_editor\"            , \"light\"],\n    [\"Ambiance\"             ,\"ambiance\"                ,  \"dark\"],\n    [\"Chaos\"                ,\"chaos\"                   ,  \"dark\"],\n    [\"Clouds Midnight\"      ,\"clouds_midnight\"         ,  \"dark\"],\n    [\"Dracula\"              ,\"\"                        ,  \"dark\"],\n    [\"Cobalt\"               ,\"cobalt\"                  ,  \"dark\"],\n    [\"Gruvbox\"              ,\"gruvbox\"                 ,  \"dark\"],\n    [\"Green on Black\"       ,\"gob\"                     ,  \"dark\"],\n    [\"idle Fingers\"         ,\"idle_fingers\"            ,  \"dark\"],\n    [\"krTheme\"              ,\"kr_theme\"                ,  \"dark\"],\n    [\"Merbivore\"            ,\"merbivore\"               ,  \"dark\"],\n    [\"Merbivore Soft\"       ,\"merbivore_soft\"          ,  \"dark\"],\n    [\"Mono Industrial\"      ,\"mono_industrial\"         ,  \"dark\"],\n    [\"Monokai\"              ,\"monokai\"                 ,  \"dark\"],\n    [\"Nord Dark\"            ,\"nord_dark\"               ,  \"dark\"],\n    [\"One Dark\"             ,\"one_dark\"                ,  \"dark\"],\n    [\"Pastel on dark\"       ,\"pastel_on_dark\"          ,  \"dark\"],\n    [\"Solarized Dark\"       ,\"solarized_dark\"          ,  \"dark\"],\n    [\"Terminal\"             ,\"terminal\"                ,  \"dark\"],\n    [\"Tomorrow Night\"       ,\"tomorrow_night\"          ,  \"dark\"],\n    [\"Tomorrow Night Blue\"  ,\"tomorrow_night_blue\"     ,  \"dark\"],\n    [\"Tomorrow Night Bright\",\"tomorrow_night_bright\"   ,  \"dark\"],\n    [\"Tomorrow Night 80s\"   ,\"tomorrow_night_eighties\" ,  \"dark\"],\n    [\"Twilight\"             ,\"twilight\"                ,  \"dark\"],\n    [\"Vibrant Ink\"          ,\"vibrant_ink\"             ,  \"dark\"],\n    [\"GitHub Dark\"          ,\"github_dark\"             ,  \"dark\"],\n    [\"CloudEditor Dark\"     ,\"cloud_editor_dark\"       ,  \"dark\"]\n];\n\n\nexports.themesByName = {};\n\n/**\n * An array containing information about available themes.\n */\nexports.themes = themeData.map(function(data) {\n    var name = data[1] || data[0].replace(/ /g, \"_\").toLowerCase();\n    var theme = {\n        caption: data[0],\n        theme: \"ace/theme/\" + name,\n        isDark: data[2] == \"dark\",\n        name: name\n    };\n    exports.themesByName[name] = theme;\n    return theme;\n});\n"],"names":[],"sourceRoot":""}