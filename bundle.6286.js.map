{"version":3,"file":"bundle.6286.js","mappings":";;;;;;AAAa;;AAEb,gDAAmD;AACnD,aAAa;;;;;;;;ACHb;AACA,EAAE,eAAe,qBAAqB;AACtC;AACA;AACA,sBAAsB;AACtB,sBAAsB,UAAU,GAAG;AACnC,sBAAsB;AACtB;AACA,sBAAsB;AACtB,sBAAsB;AACtB,sBAAsB;AACtB;AACA,OAAO;AACP;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB,aAAa,IAAI,OAAO;AAC7C;AACA,qBAAqB,aAAa,MAAM;AACxC;AACA,aAAa,UAAU,GAAG,QAAQ;AAClC,KAAK;AACL;AACA,SAAS,QAAQ,KAAK;AACtB;AACA,SAAS,QAAQ,KAAK,OAAO,GAAG;AAChC;AACA,YAAY,QAAQ,KAAK,OAAO,GAAG;AACnC;AACA,UAAU,SAAS;AACnB,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,IAAI,QAAQ,MAAM;AAClB,UAAU;AACV;AACA,IAAI,MAAM,MAAM,KAAK,MAAM;AAC3B,QAAQ,GAAG,KAAK;AAChB;AACA,IAAI,MAAM,MAAM,KAAK,MAAM,KAAK,MAAM;AACtC,QAAQ,GAAG,KAAK;AAChB;AACA,IAAI,OAAO,GAAG,MAAM,GAAG;AACvB;AACA;AACA;AACA;AACA,MAAM,KAAK,MAAM;AACjB;AACA,MAAM,KAAK,MAAM;AACjB;AACA,IAAI,KAAK,MAAM;AACf;AACA,IAAI,KAAK,MAAM;AACf;AACA,IAAI,OAAO,MAAM;AACjB;AACA,IAAI,OAAO,MAAM;AACjB;AACA,KAAK,IAAI,KAAK,IAAI;AAClB;AACA,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AAC3B;AACA,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AACpC;AACA,IAAI,YAAY,GAAG,aAAa,KAAK;AACrC,SAAS,aAAa,KAAK;AAC3B;AACA;AACA,SAAS,aAAa;AACtB,KAAK,GAAG,MAAM;AACd;AACA,QAAQ,GAAG,KAAK;AAChB,OAAO;AACP;AACA;AACA,KAAK,MAAM,KAAK;AAChB","sources":["webpack://ace-playground/./node_modules/ace-code/src/snippets/haskell.js","webpack://ace-playground/./node_modules/ace-code/src/snippets/haskell.snippets.js"],"sourcesContent":["\"use strict\";\n\nexports.snippetText = require(\"./haskell.snippets\");\nexports.scope = \"haskell\";\n","module.exports = `snippet lang\n\t{-# LANGUAGE \\${1:OverloadedStrings} #-}\nsnippet info\n\t-- |\n\t-- Module      :  \\${1:Module.Namespace}\n\t-- Copyright   :  \\${2:Author} \\${3:2011-2012}\n\t-- License     :  \\${4:BSD3}\n\t--\n\t-- Maintainer  :  \\${5:email@something.com}\n\t-- Stability   :  \\${6:experimental}\n\t-- Portability :  \\${7:unknown}\n\t--\n\t-- \\${8:Description}\n\t--\nsnippet import\n\timport           \\${1:Data.Text}\nsnippet import2\n\timport           \\${1:Data.Text} (\\${2:head})\nsnippet importq\n\timport qualified \\${1:Data.Text} as \\${2:T}\nsnippet inst\n\tinstance \\${1:Monoid} \\${2:Type} where\n\t\t\\${3}\nsnippet type\n\ttype \\${1:Type} = \\${2:Type}\nsnippet data\n\tdata \\${1:Type} = \\${2:\\$1} \\${3:Int}\nsnippet newtype\n\tnewtype \\${1:Type} = \\${2:\\$1} \\${3:Int}\nsnippet class\n\tclass \\${1:Class} a where\n\t\t\\${2}\nsnippet module\n\tmodule \\`substitute(substitute(expand('%:r'), '[/\\\\\\\\]','.','g'),'^\\\\%(\\\\l*\\\\.\\\\)\\\\?','','')\\` (\n\t)\twhere\n\t\\`expand('%') =~ 'Main' ? \"\\\\n\\\\nmain = do\\\\n  print \\\\\"hello world\\\\\"\" : \"\"\\`\n\nsnippet const\n\t\\${1:name} :: \\${2:a}\n\t\\$1 = \\${3:undefined}\nsnippet fn\n\t\\${1:fn} :: \\${2:a} -> \\${3:a}\n\t\\$1 \\${4} = \\${5:undefined}\nsnippet fn2\n\t\\${1:fn} :: \\${2:a} -> \\${3:a} -> \\${4:a}\n\t\\$1 \\${5} = \\${6:undefined}\nsnippet ap\n\t\\${1:map} \\${2:fn} \\${3:list}\nsnippet do\n\tdo\n\t\t\nsnippet λ\n\t\\\\\\${1:x} -> \\${2}\nsnippet \\\\\n\t\\\\\\${1:x} -> \\${2}\nsnippet <-\n\t\\${1:a} <- \\${2:m a}\nsnippet ←\n\t\\${1:a} <- \\${2:m a}\nsnippet ->\n\t\\${1:m a} -> \\${2:a}\nsnippet →\n\t\\${1:m a} -> \\${2:a}\nsnippet tup\n\t(\\${1:a}, \\${2:b})\nsnippet tup2\n\t(\\${1:a}, \\${2:b}, \\${3:c})\nsnippet tup3\n\t(\\${1:a}, \\${2:b}, \\${3:c}, \\${4:d})\nsnippet rec\n\t\\${1:Record} { \\${2:recFieldA} = \\${3:undefined}\n\t\t\t\t, \\${4:recFieldB} = \\${5:undefined}\n\t\t\t\t}\nsnippet case\n\tcase \\${1:something} of\n\t\t\\${2} -> \\${3}\nsnippet let\n\tlet \\${1} = \\${2}\n\tin \\${3}\nsnippet where\n\twhere\n\t\t\\${1:fn} = \\${2:undefined}\n`;\n"],"names":[],"sourceRoot":""}