{"version":3,"file":"bundle.5120.js","mappings":";;;;;;AAAa;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,eAAe,iCAAsB;AACrC,0BAA0B,yDAAsD;AAChF,oBAAoB,mDAAyC;;AAE7D;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED,YAAY;;;;;;;ACnBC;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,yBAAyB,+CAAoD;AAC7E;AACA,EAAE,qDAAgE;;AAElE;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAA2B;;;;;;;ACzHd;;AAEb,UAAU,mBAAO,CAAC,IAAe;AACjC,mBAAmB,yCAAwC;;AAE3D;;AAEA;;AAEA;;AAEA;;AAEA,SAAqB","sources":["webpack://ace-playground/./node_modules/ace-code/src/mode/astro.js","webpack://ace-playground/./node_modules/ace-code/src/mode/astro_highlight_rules.js","webpack://ace-playground/./node_modules/ace-code/src/mode/behaviour/html.js"],"sourcesContent":["\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar HtmlMode = require(\"./html\").Mode;\nvar AstroHighlightRules = require(\"./astro_highlight_rules\").AstroHighlightRules;\nvar HtmlBehaviour = require(\"./behaviour/html\").HtmlBehaviour;\n\nvar Mode = function() {\n  HtmlMode.call(this);\n  this.HighlightRules = AstroHighlightRules;\n  this.$behaviour = new HtmlBehaviour();\n};\n\noop.inherits(Mode, HtmlMode);\n\n(function() {\n  this.$id = \"ace/mode/astro\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;","\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar HtmlHighlightRules = require(\"./html_highlight_rules\").HtmlHighlightRules;\nvar JavascriptHighlightRules =\n  require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n\nvar AstroHighlightRules = function () {\n  HtmlHighlightRules.call(this);\n\n  var astro = {\n    token: \"paren.quasi.start\",\n    regex: /{/,\n    next: function (state, stack) {\n      if (state !== \"start\") {\n        if (state.indexOf(\"attribute-equals\") !== -1) {\n          stack.splice(0);\n          stack.unshift(\"tag_stuff\");\n        } else {\n          stack.unshift(state);\n        }\n      }\n      return \"inline-js-start\";\n    }\n  };\n\n  for (var key in this.$rules) {\n    if (\n      key.startsWith(\"js\") ||\n      key.startsWith(\"css\") ||\n      key.startsWith(\"comment\")\n    )\n      continue;\n    this.$rules[key].unshift(astro);\n  }\n\n  this.$rules.start.unshift({\n    token: \"comment\",\n    regex: /^---$/,\n    onMatch: function (value, state, stack) {\n      stack.splice(0);\n      return this.token;\n    },\n    next: \"javascript-start\"\n  });\n\n  this.embedRules(JavascriptHighlightRules, \"javascript-\", [\n    {\n      regex: /^---$/,\n      token: \"comment\",\n      next: \"start\",\n      onMatch: function (value, state, stack) {\n        stack.splice(0);\n        return this.token;\n      }\n    }\n  ]);\n\n  this.embedRules(JavascriptHighlightRules, \"inline-js-\");\n\n  var astroRules = [\n    {\n      regex: /}/,\n      token: \"paren.quasi.end\",\n      onMatch: function (value, state, stack) {\n        if (stack[0] === \"inline-js-start\") {\n          stack.shift();\n          this.next = stack.shift();\n          if (this.next.indexOf(\"string\") !== -1) \n            return \"paren.quasi.end\";\n          return \"paren.rparen\";\n        } else {\n          this.next = stack.shift() || \"start\";\n          return this.token;\n        }\n      }\n    },\n    {\n      regex: /{/,\n      token: \"paren.lparen\",\n      push: \"inline-js-start\"\n    }\n  ];\n\n  this.$rules[\"inline-js-start\"].unshift(astroRules);\n  this.$rules[\"inline-js-no_regex\"].unshift(astroRules);\n\n\n  function overwriteJSXendRule(prefix) {\n    for (var index in this.$rules[prefix + \"jsxAttributes\"]) {\n      if (\n        this.$rules[prefix + \"jsxAttributes\"][index].token ===\n        \"meta.tag.punctuation.tag-close.xml\"\n      ) {\n        this.$rules[prefix + \"jsxAttributes\"][index].onMatch = function (\n          value,\n          currentState,\n          stack\n        ) {\n          if (currentState == stack[0]) stack.shift();\n          if (value.length == 2) {\n            if (stack[0] == this.nextState) stack[1]--;\n            if (!stack[1] || stack[1] < 0) {\n              stack.splice(0, 2);\n            }\n          }\n          this.next = stack[0] || prefix + \"start\";\n          return [{ type: this.token, value: value }];\n        };\n        break;\n      }\n    }\n  }\n\n  overwriteJSXendRule.call(this, \"javascript-\");\n  overwriteJSXendRule.call(this, \"inline-js-\");\n\n  this.normalizeRules();\n};\n\noop.inherits(AstroHighlightRules, HtmlHighlightRules);\nexports.AstroHighlightRules = AstroHighlightRules;","\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar XmlBehaviour = require(\"../behaviour/xml\").XmlBehaviour;\n\nvar HtmlBehaviour = function () {\n\n    XmlBehaviour.call(this);\n\n};\n\noop.inherits(HtmlBehaviour, XmlBehaviour);\n\nexports.HtmlBehaviour = HtmlBehaviour;\n"],"names":[],"sourceRoot":""}