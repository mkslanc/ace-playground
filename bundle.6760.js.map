{"version":3,"file":"bundle.6760.js","mappings":";;;;;;AAAA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,aAKJ;AACF,CAAC;AACD,yBAAyB;AACzB;AACA;;AAEA;AACA,iCAAiC,0BAAmB,EAAE,8BAAmB;;AAEzE,qBAAqB,8BAAmB,GAAG,0BAAmB;AAC9D;AACA,sBAAsB;AACtkCAAkC;;;AAGnC,OAAO;;AAEP;AACA,iCAAiC,0BAAmB,EAAE,gCAAmB;;AAEzE,qBAAqB,gCAAmB,GAAG,0BAAmB;AAC9D;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,gCAAmB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAmB;AAC9B;AACA,gBAAgB,gCAAmB,wBAAwB,gCAAmB;AAC9E,oDAAoD,wCAAwC;AAC5F;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW,gCAAmB;AAC9B,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW,gCAAmB;AAC9B;AACA,kEAAkE,iBAAiB;AACnF;AACA,2DAA2D,aAAa;AACxE;AACA,WAAW;AACX;AACA;AACA,IAAI,0BAAmB;AACvB,gCAAmB,GAAG,0BAAmB;AACzC,qBAAqB,gCAAmB,GAAG,0BAAmB;AAC9D;AACA,sBAAsB;AACtB,+DAA+D,gCAAmB;AAClF,uEAAuE,gCAAmB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,qOAAqO;AACrO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA,iBAAiB;AACjwDAAwD;AACxD,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,iBAAiB,0BAAmB;AACpC,UAAU;AACV;AACA,CAAC;;;;;;UC10BD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sDAAsD;WACtD,sCAAsC,iEAAiE;WACvG;WACA;WACA;WACA;WACA;WACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;;;;;;ACpCiE;AAEjE,IAAIC,UAAU,IAAID,6EAAcA,CAACE;AACjCD,QAAQE,eAAe,CAAC,QAAQ;IAC5BC,QAAQ,IAAM,2GAAwC;IACtDC,WAAW;IACXC,OAAO;AACX;AACAL,QAAQE,eAAe,CAAC,OAAO;IAC3BC,QAAQ,IAAM,0GAAuC;IACrDC,WAAW;IACXC,OAAO;AACX;AACAL,QAAQE,eAAe,CAAC,cAAc;IAClCC,QAAQ,IAAM,2GAA8C;IAC5DC,WAAW;IACXC,OAAO;AACX","sources":["webpack://ace-playground/./node_modules/ace-linters/build/service-manager.js","webpack://ace-playground/webpack/bootstrap","webpack://ace-playground/webpack/runtime/compat get default export","webpack://ace-playground/webpack/runtime/create fake namespace object","webpack://ace-playground/webpack/runtime/define property getters","webpack://ace-playground/webpack/runtime/ensure chunk","webpack://ace-playground/webpack/runtime/get javascript chunk filename","webpack://ace-playground/webpack/runtime/global","webpack://ace-playground/webpack/runtime/hasOwnProperty shorthand","webpack://ace-playground/webpack/runtime/make namespace object","webpack://ace-playground/webpack/runtime/publicPath","webpack://ace-playground/webpack/runtime/importScripts chunk loading","webpack://ace-playground/./src/linters/webworker.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 2032:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Go: () => (/* binding */ MessageType)\n/* harmony export */ });\n/* unused harmony exports BaseMessage, InitMessage, FormatMessage, CompleteMessage, ResolveCompletionMessage, HoverMessage, ValidateMessage, ChangeMessage, DeltasMessage, ChangeModeMessage, ChangeOptionsMessage, CloseDocumentMessage, CloseConnectionMessage, GlobalOptionsMessage, ConfigureFeaturesMessage, SignatureHelpMessage, DocumentHighlightMessage, GetSemanticTokensMessage, GetCodeActionsMessage, SetWorkspaceMessage, ExecuteCommandMessage, AppliedEditMessage, RenameDocumentMessage */\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nclass BaseMessage {\n    constructor(documentIdentifier, callbackId){\n        _define_property(this, \"sessionId\", void 0);\n        _define_property(this, \"documentUri\", void 0);\n        _define_property(this, \"version\", void 0);\n        _define_property(this, \"callbackId\", void 0);\n        this.sessionId = documentIdentifier.sessionId;\n        this.documentUri = documentIdentifier.documentUri;\n        this.callbackId = callbackId;\n    }\n}\nclass InitMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, version, mode, options){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.init);\n        _define_property(this, \"mode\", void 0);\n        _define_property(this, \"options\", void 0);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.version = version;\n        this.options = options;\n        this.mode = mode;\n        this.value = value;\n    }\n}\nclass FormatMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, format){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.format);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"format\", void 0);\n        this.value = value;\n        this.format = format;\n    }\n}\nclass CompleteMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.complete);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass ResolveCompletionMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.resolveCompletion);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass HoverMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.hover);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass ValidateMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.validate);\n    }\n}\nclass ChangeMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, version){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.change);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.value = value;\n        this.version = version;\n    }\n}\nclass DeltasMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, version){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.applyDelta);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.value = value;\n        this.version = version;\n    }\n}\nclass ChangeModeMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, version, mode){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.changeMode);\n        _define_property(this, \"mode\", void 0);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.value = value;\n        this.mode = mode;\n        this.version = version;\n    }\n}\nclass ChangeOptionsMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, options, merge = false){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.changeOptions);\n        _define_property(this, \"options\", void 0);\n        _define_property(this, \"merge\", void 0);\n        this.options = options;\n        this.merge = merge;\n    }\n}\nclass CloseDocumentMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.closeDocument);\n    }\n}\nclass CloseConnectionMessage {\n    constructor(callbackId){\n        _define_property(this, \"type\", MessageType.closeConnection);\n        _define_property(this, \"callbackId\", void 0);\n        this.callbackId = callbackId;\n    }\n}\nclass GlobalOptionsMessage {\n    constructor(serviceName, options, merge){\n        _define_property(this, \"type\", MessageType.globalOptions);\n        _define_property(this, \"serviceName\", void 0);\n        _define_property(this, \"options\", void 0);\n        _define_property(this, \"merge\", void 0);\n        this.serviceName = serviceName;\n        this.options = options;\n        this.merge = merge;\n    }\n}\nclass ConfigureFeaturesMessage {\n    constructor(serviceName, options){\n        _define_property(this, \"type\", MessageType.configureFeatures);\n        _define_property(this, \"serviceName\", void 0);\n        _define_property(this, \"options\", void 0);\n        this.serviceName = serviceName;\n        this.options = options;\n    }\n}\nclass SignatureHelpMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.signatureHelp);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass DocumentHighlightMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.documentHighlight);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass GetSemanticTokensMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.getSemanticTokens);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass GetCodeActionsMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, context){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.getCodeActions);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"context\", void 0);\n        this.value = value;\n        this.context = context;\n    }\n}\nclass SetWorkspaceMessage {\n    constructor(value){\n        _define_property(this, \"type\", MessageType.setWorkspace);\n        _define_property(this, \"value\", void 0);\n        this.value = value;\n    }\n}\nclass ExecuteCommandMessage {\n    constructor(serviceName, callbackId, command, args){\n        _define_property(this, \"callbackId\", void 0);\n        _define_property(this, \"serviceName\", void 0);\n        _define_property(this, \"type\", MessageType.executeCommand);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"args\", void 0);\n        this.serviceName = serviceName;\n        this.callbackId = callbackId;\n        this.value = command;\n        this.args = args;\n    }\n}\nclass AppliedEditMessage {\n    constructor(value, serviceName, callbackId){\n        _define_property(this, \"callbackId\", void 0);\n        _define_property(this, \"serviceName\", void 0);\n        _define_property(this, \"type\", MessageType.appliedEdit);\n        _define_property(this, \"value\", void 0);\n        this.serviceName = serviceName;\n        this.callbackId = callbackId;\n        this.value = value;\n    }\n}\nclass RenameDocumentMessage extends BaseMessage {\n    constructor(documentIdentifier, callbackId, value, version){\n        super(documentIdentifier, callbackId);\n        _define_property(this, \"type\", MessageType.renameDocument);\n        _define_property(this, \"value\", void 0);\n        _define_property(this, \"version\", void 0);\n        this.value = value;\n        this.version = version;\n    }\n}\nvar MessageType;\n(function(MessageType) {\n    MessageType[MessageType[\"init\"] = 0] = \"init\";\n    MessageType[MessageType[\"format\"] = 1] = \"format\";\n    MessageType[MessageType[\"complete\"] = 2] = \"complete\";\n    MessageType[MessageType[\"resolveCompletion\"] = 3] = \"resolveCompletion\";\n    MessageType[MessageType[\"change\"] = 4] = \"change\";\n    MessageType[MessageType[\"hover\"] = 5] = \"hover\";\n    MessageType[MessageType[\"validate\"] = 6] = \"validate\";\n    MessageType[MessageType[\"applyDelta\"] = 7] = \"applyDelta\";\n    MessageType[MessageType[\"changeMode\"] = 8] = \"changeMode\";\n    MessageType[MessageType[\"changeOptions\"] = 9] = \"changeOptions\";\n    MessageType[MessageType[\"closeDocument\"] = 10] = \"closeDocument\";\n    MessageType[MessageType[\"globalOptions\"] = 11] = \"globalOptions\";\n    MessageType[MessageType[\"configureFeatures\"] = 12] = \"configureFeatures\";\n    MessageType[MessageType[\"signatureHelp\"] = 13] = \"signatureHelp\";\n    MessageType[MessageType[\"documentHighlight\"] = 14] = \"documentHighlight\";\n    MessageType[MessageType[\"closeConnection\"] = 15] = \"closeConnection\";\n    MessageType[MessageType[\"capabilitiesChange\"] = 16] = \"capabilitiesChange\";\n    MessageType[MessageType[\"getSemanticTokens\"] = 17] = \"getSemanticTokens\";\n    MessageType[MessageType[\"getCodeActions\"] = 18] = \"getCodeActions\";\n    MessageType[MessageType[\"executeCommand\"] = 19] = \"executeCommand\";\n    MessageType[MessageType[\"applyEdit\"] = 20] = \"applyEdit\";\n    MessageType[MessageType[\"appliedEdit\"] = 21] = \"appliedEdit\";\n    MessageType[MessageType[\"setWorkspace\"] = 22] = \"setWorkspace\";\n    MessageType[MessageType[\"renameDocument\"] = 23] = \"renameDocument\";\n})(MessageType || (MessageType = {}));\n\n\n/***/ }),\n\n/***/ 7770:\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rL: () => (/* binding */ mergeObjects),\n/* harmony export */   z2: () => (/* binding */ notEmpty)\n/* harmony export */ });\n/* unused harmony exports mergeRanges, checkValueAgainstRegexpArray, convertToUri */\n\nfunction mergeObjects(obj1, obj2, excludeUndefined = false) {\n    if (!obj1) return obj2;\n    if (!obj2) return obj1;\n    if (excludeUndefined) {\n        obj1 = excludeUndefinedValues(obj1);\n        obj2 = excludeUndefinedValues(obj2);\n    }\n    const mergedObjects = {\n        ...obj2,\n        ...obj1\n    }; // Give priority to obj1 values by spreading obj2 first, then obj1\n    for (const key of Object.keys(mergedObjects)){\n        if (obj1[key] && obj2[key]) {\n            if (Array.isArray(obj1[key])) {\n                mergedObjects[key] = obj1[key].concat(obj2[key]);\n            } else if (Array.isArray(obj2[key])) {\n                mergedObjects[key] = obj2[key].concat(obj1[key]);\n            } else if (typeof obj1[key] === 'object' && typeof obj2[key] === 'object') {\n                mergedObjects[key] = mergeObjects(obj1[key], obj2[key]);\n            }\n        }\n    }\n    return mergedObjects;\n}\nfunction excludeUndefinedValues(obj) {\n    const filteredEntries = Object.entries(obj).filter(([_, value])=>value !== undefined);\n    return Object.fromEntries(filteredEntries);\n}\nfunction notEmpty(value) {\n    return value !== null && value !== undefined;\n}\n//taken with small changes from ace-code\nfunction mergeRanges(ranges) {\n    var list = ranges;\n    list = list.sort(function(a, b) {\n        return comparePoints(a.start, b.start);\n    });\n    var next = list[0], range;\n    for(var i = 1; i < list.length; i++){\n        range = next;\n        next = list[i];\n        var cmp = comparePoints(range.end, next.start);\n        if (cmp < 0) continue;\n        if (cmp == 0 && !range.isEmpty() && !next.isEmpty()) continue;\n        if (comparePoints(range.end, next.end) < 0) {\n            range.end.row = next.end.row;\n            range.end.column = next.end.column;\n        }\n        list.splice(i, 1);\n        next = range;\n        i--;\n    }\n    return list;\n}\nfunction comparePoints(p1, p2) {\n    return p1.row - p2.row || p1.column - p2.column;\n}\nfunction checkValueAgainstRegexpArray(value, regexpArray) {\n    if (!regexpArray) {\n        return false;\n    }\n    for(let i = 0; i < regexpArray.length; i++){\n        if (regexpArray[i].test(value)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction convertToUri(filePath) {\n    //already URI\n    if (filePath.startsWith(\"file:///\")) {\n        return filePath;\n    }\n    return URI.file(filePath).toString();\n}\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServiceManager: () => (/* binding */ ServiceManager)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7770);\n/* harmony import */ var _message_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2032);\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n\n\nclass ServiceManager {\n    async getServicesCapabilitiesAfterCallback(documentIdentifier, message, callback) {\n        let services = await callback(documentIdentifier, message.value, message.mode, message.options);\n        if (services) {\n            return Object.keys(services).reduce((acc, key)=>{\n                var _services_key_serviceInstance, _services_key;\n                acc[key] = ((_services_key = services[key]) === null || _services_key === void 0 ? void 0 : (_services_key_serviceInstance = _services_key.serviceInstance) === null || _services_key_serviceInstance === void 0 ? void 0 : _services_key_serviceInstance.serviceCapabilities) || null;\n                return acc;\n            }, {});\n        }\n    }\n    async aggregateFeatureResponses(serviceInstances, feature, methodName, documentIdentifier, attrs) {\n        return (await Promise.all(this.filterByFeature(serviceInstances, feature).map(async (service)=>{\n            if (Array.isArray(attrs)) {\n                return service[methodName](documentIdentifier, ...attrs);\n            } else {\n                return service[methodName](documentIdentifier, attrs);\n            }\n        }))).filter(_utils__WEBPACK_IMPORTED_MODULE_1__/* .notEmpty */ .z2);\n    }\n    applyOptionsToServices(serviceInstances, documentUri, options) {\n        serviceInstances.forEach((service)=>{\n            service.setOptions(documentUri, options);\n        });\n    }\n    async closeAllConnections() {\n        var services = this.$services;\n        for(let serviceName in services){\n            var _services_serviceName_serviceInstance, _services_serviceName;\n            await ((_services_serviceName = services[serviceName]) === null || _services_serviceName === void 0 ? void 0 : (_services_serviceName_serviceInstance = _services_serviceName.serviceInstance) === null || _services_serviceName_serviceInstance === void 0 ? void 0 : _services_serviceName_serviceInstance.closeConnection());\n        }\n    }\n    static async $initServiceInstance(service, ctx, workspaceUri) {\n        let module;\n        if ('type' in service) {\n            if ([\n                \"socket\",\n                \"webworker\"\n            ].includes(service.type)) {\n                module = await service.module();\n                service.serviceInstance = new module[\"LanguageClient\"](service, ctx, workspaceUri);\n            } else throw \"Unknown service type\";\n        } else {\n            module = await service.module();\n            service.serviceInstance = new module[service.className](service.modes);\n        }\n        if (service.options || service.initializationOptions) {\n            var _service_options, _ref;\n            service.serviceInstance.setGlobalOptions((_ref = (_service_options = service.options) !== null && _service_options !== void 0 ? _service_options : service.initializationOptions) !== null && _ref !== void 0 ? _ref : {});\n        }\n        service.serviceInstance.serviceData = service;\n        return service.serviceInstance;\n    }\n    async $getServicesInstancesByMode(mode) {\n        let services = this.findServicesByMode(mode);\n        if (Object.keys(services).length === 0) {\n            return [];\n        }\n        for(let serviceName in services){\n            await this.initializeService(serviceName);\n        }\n        return services;\n    }\n    async initializeService(serviceName) {\n        let service = this.$services[serviceName];\n        if (!service.serviceInstance) {\n            if (!this.serviceInitPromises[service.id]) {\n                this.serviceInitPromises[service.id] = ServiceManager.$initServiceInstance(service, this.ctx, this.workspaceUri).then((instance)=>{\n                    service.serviceInstance = instance;\n                    service.serviceInstance.serviceName = serviceName;\n                    delete this.serviceInitPromises[service.id]; // Clean up\n                    return instance;\n                });\n            }\n            return this.serviceInitPromises[service.id];\n        } else {\n            if (!service.serviceInstance.serviceName) {\n                service.serviceInstance.serviceName = serviceName;\n            }\n            return service.serviceInstance;\n        }\n    }\n    setGlobalOptions(serviceName, options, merge = false) {\n        let service = this.$services[serviceName];\n        if (!service) return;\n        service.options = merge ? (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .mergeObjects */ .rL)(options, service.options) : options;\n        if (service.serviceInstance) {\n            service.serviceInstance.setGlobalOptions(service.options);\n        }\n    }\n    setWorkspace(workspaceUri) {\n        this.workspaceUri = workspaceUri;\n        Object.values(this.$services).forEach((service)=>{\n            var _service_serviceInstance;\n            (_service_serviceInstance = service.serviceInstance) === null || _service_serviceInstance === void 0 ? void 0 : _service_serviceInstance.setWorkspace(this.workspaceUri);\n        });\n    }\n    async addDocument(documentIdentifier, documentValue, mode, options) {\n        if (!mode || !/^ace\\/mode\\//.test(mode)) return;\n        mode = mode.replace(\"ace/mode/\", \"\");\n        mode = mode.replace(/golang$/, \"go\");\n        let services = await this.$getServicesInstancesByMode(mode);\n        if (Object.keys(services).length === 0) return;\n        let documentItem = {\n            uri: documentIdentifier.uri,\n            version: documentIdentifier.version,\n            languageId: mode,\n            text: documentValue\n        };\n        Object.values(services).forEach((el)=>el.serviceInstance.addDocument(documentItem));\n        this.$sessionIDToMode[documentIdentifier.uri] = mode;\n        return services;\n    }\n    async renameDocument(documentIdentifier, newDocumentUri) {\n        let services = this.getServicesInstances(documentIdentifier.uri);\n        if (services.length > 0) {\n            services.forEach((el)=>el.renameDocument(documentIdentifier, newDocumentUri));\n            this.$sessionIDToMode[newDocumentUri] = this.$sessionIDToMode[documentIdentifier.uri];\n            delete this.$sessionIDToMode[documentIdentifier.uri];\n        }\n    }\n    async changeDocumentMode(documentIdentifier, value, mode, options) {\n        this.removeDocument(documentIdentifier);\n        return await this.addDocument(documentIdentifier, value, mode, options);\n    }\n    removeDocument(document) {\n        let services = this.getServicesInstances(document.uri);\n        if (services.length > 0) {\n            services.forEach((el)=>el.removeDocument(document));\n            delete this.$sessionIDToMode[document.uri];\n        }\n    }\n    getServicesInstances(documentUri) {\n        let mode = this.$sessionIDToMode[documentUri];\n        if (!mode) return []; //TODO:\n        let services = this.findServicesByMode(mode);\n        return Object.values(services).map((el)=>el.serviceInstance).filter(_utils__WEBPACK_IMPORTED_MODULE_1__/* .notEmpty */ .z2);\n    }\n    filterByFeature(serviceInstances, feature) {\n        return serviceInstances.filter((el)=>{\n            if (!el.serviceData.features[feature]) {\n                return false;\n            }\n            const capabilities = el.serviceCapabilities;\n            switch(feature){\n                case \"hover\":\n                    return capabilities.hoverProvider == true;\n                case \"completion\":\n                    return capabilities.completionProvider != undefined;\n                case \"completionResolve\":\n                    var _capabilities_completionProvider;\n                    return ((_capabilities_completionProvider = capabilities.completionProvider) === null || _capabilities_completionProvider === void 0 ? void 0 : _capabilities_completionProvider.resolveProvider) === true;\n                case \"format\":\n                    return capabilities.documentRangeFormattingProvider == true || capabilities.documentFormattingProvider == true;\n                case \"diagnostics\":\n                    return capabilities.diagnosticProvider != undefined;\n                case \"signatureHelp\":\n                    return capabilities.signatureHelpProvider != undefined;\n                case \"documentHighlight\":\n                    return capabilities.documentHighlightProvider == true;\n                case \"semanticTokens\":\n                    return capabilities.semanticTokensProvider != undefined;\n                case \"codeAction\":\n                    return capabilities.codeActionProvider != undefined;\n                case \"executeCommand\":\n                    return capabilities.executeCommandProvider != undefined;\n            }\n        });\n    }\n    findServicesByMode(mode) {\n        let servicesWithName = {};\n        Object.entries(this.$services).forEach(([key, value])=>{\n            let extensions = value.modes.split('|');\n            if (extensions.includes(mode)) servicesWithName[key] = this.$services[key];\n        });\n        return servicesWithName;\n    }\n    registerService(name, service) {\n        service.id = name;\n        service.features = this.setDefaultFeaturesState(service.features);\n        this.$services[name] = service;\n    }\n    registerServer(name, clientConfig) {\n        clientConfig.id = name;\n        clientConfig.className = \"LanguageClient\";\n        clientConfig.features = this.setDefaultFeaturesState(clientConfig.features);\n        this.$services[name] = clientConfig;\n    }\n    configureFeatures(name, features) {\n        features = this.setDefaultFeaturesState(features);\n        if (!this.$services[name]) return;\n        this.$services[name].features = features;\n    }\n    setDefaultFeaturesState(serviceFeatures) {\n        var _features, _features1, _features2, _features3, _features4, _features5, _features6, _features7, _features8, _features9;\n        let features = serviceFeatures !== null && serviceFeatures !== void 0 ? serviceFeatures : {};\n        var _hover;\n        (_hover = (_features = features).hover) !== null && _hover !== void 0 ? _hover : _features.hover = true;\n        var _completion;\n        (_completion = (_features1 = features).completion) !== null && _completion !== void 0 ? _completion : _features1.completion = true;\n        var _completionResolve;\n        (_completionResolve = (_features2 = features).completionResolve) !== null && _completionResolve !== void 0 ? _completionResolve : _features2.completionResolve = true;\n        var _format;\n        (_format = (_features3 = features).format) !== null && _format !== void 0 ? _format : _features3.format = true;\n        var _diagnostics;\n        (_diagnostics = (_features4 = features).diagnostics) !== null && _diagnostics !== void 0 ? _diagnostics : _features4.diagnostics = true;\n        var _signatureHelp;\n        (_signatureHelp = (_features5 = features).signatureHelp) !== null && _signatureHelp !== void 0 ? _signatureHelp : _features5.signatureHelp = true;\n        var _documentHighlight;\n        (_documentHighlight = (_features6 = features).documentHighlight) !== null && _documentHighlight !== void 0 ? _documentHighlight : _features6.documentHighlight = true;\n        var _semanticTokens;\n        (_semanticTokens = (_features7 = features).semanticTokens) !== null && _semanticTokens !== void 0 ? _semanticTokens : _features7.semanticTokens = true;\n        var _codeAction;\n        (_codeAction = (_features8 = features).codeAction) !== null && _codeAction !== void 0 ? _codeAction : _features8.codeAction = true;\n        var _executeCommand;\n        (_executeCommand = (_features9 = features).executeCommand) !== null && _executeCommand !== void 0 ? _executeCommand : _features9.executeCommand = true;\n        return features;\n    }\n    constructor(ctx){\n        _define_property(this, \"$services\", {});\n        _define_property(this, \"serviceInitPromises\", {});\n        _define_property(this, \"$sessionIDToMode\", {});\n        _define_property(this, \"ctx\", void 0);\n        _define_property(this, \"workspaceUri\", void 0);\n        this.ctx = ctx;\n        let doValidation = async (document, servicesInstances)=>{\n            servicesInstances !== null && servicesInstances !== void 0 ? servicesInstances : servicesInstances = this.getServicesInstances(document.uri);\n            if (servicesInstances.length === 0) {\n                return;\n            }\n            //this is list of documents linked to services\n            let documentUrisList = Object.keys(servicesInstances[0].documents);\n            servicesInstances = this.filterByFeature(servicesInstances, \"diagnostics\");\n            servicesInstances = servicesInstances.filter((el)=>{\n                return el.serviceCapabilities.diagnosticProvider;\n            });\n            if (servicesInstances.length === 0) {\n                return;\n            }\n            let postMessage = {\n                \"type\": _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.validate\n            };\n            for (let documentUri of documentUrisList){\n                var _ref;\n                let diagnostics = (_ref = await Promise.all(servicesInstances.map((el)=>{\n                    return el.doValidation({\n                        uri: documentUri\n                    });\n                }))) !== null && _ref !== void 0 ? _ref : [];\n                postMessage[\"documentUri\"] = documentUri;\n                postMessage[\"value\"] = diagnostics.flat();\n                ctx.postMessage(postMessage);\n            }\n        };\n        let provideValidationForServiceInstance = async (serviceName)=>{\n            let service = this.$services[serviceName];\n            if (!service) return;\n            var serviceInstance = service.serviceInstance;\n            if (serviceInstance) await doValidation(undefined, [\n                serviceInstance\n            ]);\n        };\n        ctx.addEventListener(\"message\", async (ev)=>{\n            let message = ev.data;\n            var _message_sessionId;\n            let sessionID = (_message_sessionId = message[\"sessionId\"]) !== null && _message_sessionId !== void 0 ? _message_sessionId : \"\";\n            var _message_documentUri;\n            let documentUri = (_message_documentUri = message[\"documentUri\"]) !== null && _message_documentUri !== void 0 ? _message_documentUri : \"\";\n            let version = message[\"version\"];\n            let postMessage = {\n                \"type\": message.type,\n                \"sessionId\": sessionID,\n                \"callbackId\": message[\"callbackId\"]\n            };\n            let serviceInstances = this.getServicesInstances(documentUri);\n            let documentIdentifier = {\n                uri: documentUri,\n                version: version\n            };\n            switch(message.type){\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.format:\n                    serviceInstances = this.filterByFeature(serviceInstances, \"format\");\n                    if (serviceInstances.length > 0) {\n                        //we will use only first service to format\n                        postMessage[\"value\"] = await serviceInstances[0].format(documentIdentifier, message.value, message.format);\n                    }\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.complete:\n                    postMessage[\"value\"] = (await Promise.all(this.filterByFeature(serviceInstances, \"completion\").map(async (service)=>{\n                        return {\n                            completions: await service.doComplete(documentIdentifier, message[\"value\"]),\n                            service: service.serviceData.className\n                        };\n                    }))).filter(_utils__WEBPACK_IMPORTED_MODULE_1__/* .notEmpty */ .z2);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.resolveCompletion:\n                    var _this_filterByFeature_find;\n                    let serviceName = message.value[\"service\"];\n                    postMessage[\"value\"] = await ((_this_filterByFeature_find = this.filterByFeature(serviceInstances, \"completionResolve\").find((service)=>{\n                        if (service.serviceData.className === serviceName) {\n                            return service;\n                        }\n                    })) === null || _this_filterByFeature_find === void 0 ? void 0 : _this_filterByFeature_find.doResolve(message.value));\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.change:\n                    serviceInstances.forEach((service)=>{\n                        service.setValue(documentIdentifier, message[\"value\"]);\n                    });\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.applyDelta:\n                    serviceInstances.forEach((service)=>{\n                        service.applyDeltas(documentIdentifier, message[\"value\"]);\n                    });\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.hover:\n                    postMessage[\"value\"] = await this.aggregateFeatureResponses(serviceInstances, \"hover\", \"doHover\", documentIdentifier, message.value);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.validate:\n                    postMessage[\"value\"] = await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.init:\n                    postMessage[\"value\"] = await this.getServicesCapabilitiesAfterCallback(documentIdentifier, message, this.addDocument.bind(this));\n                    await doValidation(documentIdentifier);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.changeMode:\n                    postMessage[\"value\"] = await this.getServicesCapabilitiesAfterCallback(documentIdentifier, message, this.changeDocumentMode.bind(this));\n                    await doValidation(documentIdentifier);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.changeOptions:\n                    this.applyOptionsToServices(serviceInstances, documentUri, message.options);\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.closeDocument:\n                    this.removeDocument(documentIdentifier);\n                    await doValidation(documentIdentifier, serviceInstances);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.closeConnection:\n                    await this.closeAllConnections();\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.globalOptions:\n                    this.setGlobalOptions(message.serviceName, message.options, message.merge);\n                    await provideValidationForServiceInstance(message.serviceName);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.configureFeatures:\n                    this.configureFeatures(message.serviceName, message.options);\n                    await provideValidationForServiceInstance(message.serviceName);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.signatureHelp:\n                    postMessage[\"value\"] = await this.aggregateFeatureResponses(serviceInstances, \"signatureHelp\", \"provideSignatureHelp\", documentIdentifier, message.value);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.documentHighlight:\n                    let highlights = await this.aggregateFeatureResponses(serviceInstances, \"documentHighlight\", \"findDocumentHighlights\", documentIdentifier, message.value);\n                    postMessage[\"value\"] = highlights.flat();\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.getSemanticTokens:\n                    serviceInstances = this.filterByFeature(serviceInstances, \"semanticTokens\");\n                    if (serviceInstances.length > 0) {\n                        //we will use only first service\n                        postMessage[\"value\"] = await serviceInstances[0].getSemanticTokens(documentIdentifier, message.value);\n                    }\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.getCodeActions:\n                    let value = message.value;\n                    let context = message.context;\n                    postMessage[\"value\"] = (await Promise.all(this.filterByFeature(serviceInstances, \"codeAction\").map(async (service)=>{\n                        return {\n                            codeActions: await service.getCodeActions(documentIdentifier, value, context),\n                            service: service.serviceName\n                        };\n                    }))).filter(_utils__WEBPACK_IMPORTED_MODULE_1__/* .notEmpty */ .z2);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.executeCommand:\n                    var _this_$services_message_serviceName_serviceInstance, _this_$services_message_serviceName;\n                    postMessage[\"value\"] = (_this_$services_message_serviceName = this.$services[message.serviceName]) === null || _this_$services_message_serviceName === void 0 ? void 0 : (_this_$services_message_serviceName_serviceInstance = _this_$services_message_serviceName.serviceInstance) === null || _this_$services_message_serviceName_serviceInstance === void 0 ? void 0 : _this_$services_message_serviceName_serviceInstance.executeCommand(message.value, message.args);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.appliedEdit:\n                    var _this_$services_message_serviceName_serviceInstance1, _this_$services_message_serviceName1;\n                    postMessage[\"value\"] = (_this_$services_message_serviceName1 = this.$services[message.serviceName]) === null || _this_$services_message_serviceName1 === void 0 ? void 0 : (_this_$services_message_serviceName_serviceInstance1 = _this_$services_message_serviceName1.serviceInstance) === null || _this_$services_message_serviceName_serviceInstance1 === void 0 ? void 0 : _this_$services_message_serviceName_serviceInstance1.sendAppliedResult(message.value, message.callbackId);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.setWorkspace:\n                    this.setWorkspace(message.value);\n                    break;\n                case _message_types__WEBPACK_IMPORTED_MODULE_0__/* .MessageType */ .Go.renameDocument:\n                    this.renameDocument(documentIdentifier, message.value);\n                    break;\n            }\n            ctx.postMessage(postMessage);\n        });\n    }\n}\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"bundle.\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t6760: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkace_playground\"] = self[\"webpackChunkace_playground\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","import {ServiceManager} from \"ace-linters/build/service-manager\";\n\nlet manager = new ServiceManager(self);\nmanager.registerService(\"html\", {\n    module: () => import(\"ace-linters/build/html-service\"),\n    className: \"HtmlService\",\n    modes: \"html\"\n});\nmanager.registerService(\"css\", {\n    module: () => import(\"ace-linters/build/css-service\"),\n    className: \"CssService\",\n    modes: \"css\"\n});\nmanager.registerService(\"typescript\", {\n    module: () => import(\"ace-linters/build/typescript-service\"),\n    className: \"TypescriptService\",\n    modes: \"typescript|javascript|tsx|jsx\",\n});\n"],"names":["ServiceManager","manager","self","registerService","module","className","modes"],"sourceRoot":""}