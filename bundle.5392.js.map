{"version":3,"file":"bundle.5392.js","mappings":";;;;;;AAAA,yBAAyB;;AAEZ;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,eAAe,iCAAsB;AACrC,gCAAgC,8DAAkE;AAClG,mBAAmB,yCAAuC;AAC1D,mBAAmB,oCAAkC;;AAErD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,YAAY;;;;;;;;ACxBZ;;AAEa;;AAEb,UAAU,mBAAO,CAAC,IAAY;AAC9B,yBAAyB,+CAA0D;;AAEnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,2CAA2C,iBAAiB;AAC7E,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,sBAAsB;AACtB;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,0BAA0B;AAC1B,SAAS;AACT;AACA,0BAA0B;AAC1B,SAAS;AACT;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;;AAEA;;AAEA,SAAiC","sources":["webpack://ace-playground/./node_modules/ace-code/src/mode/visualforce.js","webpack://ace-playground/./node_modules/ace-code/src/mode/visualforce_highlight_rules.js"],"sourcesContent":["/* caption: Visualforce; extensions: component,page,vfp */\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar HtmlMode = require(\"./html\").Mode;\nvar VisualforceHighlightRules = require(\"./visualforce_highlight_rules\").VisualforceHighlightRules;\nvar XmlBehaviour = require(\"./behaviour/xml\").XmlBehaviour;\nvar HtmlFoldMode = require(\"./folding/html\").FoldMode;\n\nfunction VisualforceMode() {\n    HtmlMode.call(this);\n\n    this.HighlightRules = VisualforceHighlightRules;\n    this.foldingRules = new HtmlFoldMode();\n    this.$behaviour = new XmlBehaviour();\n}\n\noop.inherits(VisualforceMode, HtmlMode);\n\nVisualforceMode.prototype.emmetConfig = {\n    profile: \"xhtml\"\n};\n\nexports.Mode = VisualforceMode;\n","/* global define */\n\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar HtmlHighlightRules = require(\"../mode/html_highlight_rules\").HtmlHighlightRules;\n\nfunction string(options) {\n    return {\n        token: options.token + \".start\",\n        regex: options.start,\n        push: [{\n            token : \"constant.language.escape\",\n            regex : options.escape\n        }, {\n            token: options.token + \".end\",\n            regex: options.start,\n            next: \"pop\"\n        }, {\n            defaultToken: options.token\n        }]\n    };\n}\nvar VisualforceHighlightRules = function() {\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\":\n            \"$Action|$Api|$Component|$ComponentLabel|$CurrentPage|$FieldSet|$Label|$Label|\" +\n            \"$ObjectType|$Organization|$Page|$Permission|$Profile|$Resource|$SControl|\" +\n            \"$Setup|$Site|$System.OriginDateTime|$User|$UserRole|\" +\n            \"Site|UITheme|UIThemeDisplayed\",\n        \"keyword\":\n            \"\",\n        \"storage.type\":\n            \"\",\n        \"constant.language\":\n            \"true|false|null|TRUE|FALSE|NULL\",\n        \"support.function\":\n            \"DATE|DATEVALUE|DATETIMEVALUE|DAY|MONTH|NOW|TODAY|YEAR|BLANKVALUE|ISBLANK|\" +\n            \"NULLVALUE|PRIORVALUE|AND|CASE|IF|ISCHANGED|ISNEW|ISNUMBER|NOT|OR|ABS|\" +\n            \"CEILING|EXP|FLOOR|LN|LOG|MAX|MIN|MOD|ROUND|SQRT|BEGINS|BR|CASESAFEID|\" +\n            \"CONTAINS|FIND|GETSESSIONID|HTMLENCODE|ISPICKVAL|JSENCODE|JSINHTMLENCODE|\" +\n            \"LEFT|LEN|LOWER|LPAD|MID|RIGHT|RPAD|SUBSTITUTE|TEXT|TRIM|UPPER|URLENCODE|VALUE|\" +\n            \"GETRECORDIDS|INCLUDE|LINKTO|REGEX|REQUIRESCRIPT|URLFOR|VLOOKUP|HTMLENCODE|JSENCODE|\" +\n            \"JSINHTMLENCODE|URLENCODE\"\n    }, \"identifier\");\n\n    HtmlHighlightRules.call(this);\n    var hbs = {\n        token : \"keyword.start\",\n        regex : \"{!\",\n        push : \"Visualforce\"\n    };\n    for (var key in this.$rules) {\n        this.$rules[key].unshift(hbs);\n    }\n    this.$rules.Visualforce = [\n        string({\n            start: '\"',\n            escape: /\\\\[btnfr\"'\\\\]/,\n            token: \"string\",\n            multiline: true\n        }),\n        string({\n            start: \"'\",\n            escape: /\\\\[btnfr\"'\\\\]/,\n            token: \"string\",\n            multiline: true\n        }),\n        {\n            token: \"comment.start\",\n            regex : \"\\\\/\\\\*\",\n            push: [\n                {token : \"comment.end\", regex : \"\\\\*\\\\/|(?=})\", next : \"pop\"},\n                {defaultToken : \"comment\", caseInsensitive: true}\n            ]\n        }, {\n            token : \"keyword.end\",\n            regex : \"}\",\n            next : \"pop\"\n        }, {\n            token : keywordMapper,\n            regex : /[a-zA-Z$_\\u00a1-\\uffff][a-zA-Z\\d$_\\u00a1-\\uffff]*\\b/\n        }, {\n            token : \"keyword.operator\",\n            regex : /==|<>|!=|<=|>=|&&|\\|\\||[+\\-*/^()=<>&]/\n        }, {\n            token : \"punctuation.operator\",\n            regex : /[?:,;.]/\n        }, {\n            token : \"paren.lparen\",\n            regex : /[\\[({]/\n        }, {\n            token : \"paren.rparen\",\n            regex : /[\\])}]/\n        }\n    ];\n\n    this.normalizeRules();\n};\n\noop.inherits(VisualforceHighlightRules, HtmlHighlightRules);\n\nexports.VisualforceHighlightRules = VisualforceHighlightRules;\n"],"names":[],"sourceRoot":""}